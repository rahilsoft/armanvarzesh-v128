/* Evidence: generated by UI/UX build — booking web page */
import React, { useState } from 'react';
import Head from 'next/head';
import '../../styles/booking.module.css';
import { Button } from '../../../packages/ui/components/Button';
import { Card } from '../../../packages/ui/components/Card';
import { useListBookings, useCreateBooking, useCancelBooking } from '../../../packages/data/booking/hooks';

export default function BookingPage(){
  const { data, loading, error, reload } = useListBookings();
  const { mutate: create, loading: creating } = useCreateBooking();
  const { mutate: cancel, loading: cancelling } = useCancelBooking();
  const [when,setWhen] = useState('');
  const [notes,setNotes] = useState('');

  return (
    <div dir="rtl">
      <Head><title>رزرو — آرمان ورزش</title></Head>
      <link rel="stylesheet" href="/packages/ui/tokens/tokens.css" />
      <h1>رزرو</h1>
      <Card>
        <label>زمان</label>
        <input value={when} onChange={e=>setWhen(e.target.value)} placeholder="YYYY-MM-DDTHH:mm" />
        <label>یادداشت</label>
        <input value={notes} onChange={e=>setNotes(e.target.value)} />
        <Button onClick={async()=>{ await create({when,notes}); setWhen(''); setNotes(''); reload(); }} busy={creating}>ثبت</Button>
      </Card>
      {loading && <p>در حال بارگذاری…</p>}
      {error && <p>خطا: {String(error.message)} <Button onClick={reload}>تلاش مجدد</Button></p>}
      {!loading && !error && (!data || data.length===0) && <p>موردی یافت نشد</p>}
      <div style={{marginTop:16}}>
        {data?.map(b=>(
          <Card key={b.id}>
            <div><b>{b.when}</b> — {b.notes || '—'} — <i>{b.status}</i></div>
            {b.status!=='canceled' && <Button onClick={async()=>{ await cancel(b.id); reload(); }} busy={cancelling}>لغو</Button>}
          </Card>
        ))}
      </div>
    </div>
  );
}
