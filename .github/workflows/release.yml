name: release
on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ${{ secrets.REGISTRY || 'ghcr.io' }}
  IMAGE_REPO: ${{ secrets.IMAGE_REPO || 'org/armanvarzesh' }}
  CHART_REPO: ${{ secrets.CHART_REPO || 'oci://ghcr.io/org/helm' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Set tags
        id: meta
        run: |
          VERSION=${GITHUB_REF_NAME}
          SHA=${GITHUB_SHA::7}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "sha=$SHA" >> $GITHUB_OUTPUT
      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: ./app/backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/backend:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/backend:${{ steps.meta.outputs.sha }}
      - name: Build & push site
        uses: docker/build-push-action@v6
        with:
          context: ./app/site
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/site:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/site:${{ steps.meta.outputs.sha }}

  helm-package:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - name: Package chart and push (OCI)
        working-directory: deploy/helm/armanvarzesh
        run: |
          helm package . --version ${GITHUB_REF_NAME#v}
          echo "${{ secrets.REGISTRY_PASSWORD }}" | helm registry login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
          helm push *.tgz ${{ env.CHART_REPO }}

  deploy-prod:
    needs: [helm-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_PROD }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Helm upgrade prod
        run: |
          helm upgrade --install backend ./deploy/helm/armanvarzesh             --namespace prod             --create-namespace             --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}/backend             --set image.tag=${GITHUB_REF_NAME}             --wait --timeout 10m
      - name: Post-deploy smoke
        env:
          API_BASE_URL: ${{ secrets.PROD_BASE_URL }}
        run: pnpm run test:smoke
