name: Docker Multi-Arch (Signed + Provenance)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Discover Dockerfiles
        id: set-matrix
        run: |
          node -e "const fs=require('fs');const path=require('path');function list(dir){return fs.readdirSync(dir).flatMap(n=>{const p=path.join(dir,n);try{if(fs.statSync(p).isDirectory())return list(p);else return [p];}catch{return []}})};const files=list('.').filter(f=>/\/Dockerfile$/i.test(f) && !/node_modules|\.pnpm/.test(f));const include=files.map(f=>({file:f, context:'.', name:f.replace(/\//g,'-').replace(/^\.-/,'')}));console.log('::set-output name=matrix::'+JSON.stringify({include}));"
  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
      id-token: write  # for keyless signing
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & Push
        id: buildx
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.name }}:sha-${{ github.sha }}
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}/{1}:latest', github.repository, matrix.name) || '' }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0
      - name: Sign image (keyless via OIDC)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign --yes ghcr.io/${{ github.repository }}/${{ matrix.name }}@${{ steps.buildx.outputs.digest }}
      - name: Attest build provenance (SLSA)
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}/${{ matrix.name }}
          subject-digest: ${{ steps.buildx.outputs.digest }}
          push-to-registry: true
      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}/${{ matrix.name }}@${{ steps.buildx.outputs.digest }}
          format: spdx-json
          artifact-name: sbom-${{ matrix.name }}.spdx.json