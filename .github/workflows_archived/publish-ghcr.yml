name: Docker Publish (GHCR)
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'services/**'
      - 'docker-compose.yml'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ env.REGISTRY }}/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    ## SECRETS_ENV: map required secrets here (example)
    # env:
    #   DATABASE_URL: ${{ secrets.BACKEND_DATABASE_URL }}
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.discover.outputs.services) }}
    needs: discover
    steps:
          - uses: actions/setup-node@v4
            with:
              node-version: '20'
              cache: 'pnpm'
          - uses: pnpm/action-setup@v4
            with:
              version: 9
          - run: pnpm install --frozen-lockfile
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
          tags: |
            type=raw,value=latest
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}},value=0.0.0

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  discover:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.out.outputs.list }}
    steps:
      - uses: actions/checkout@v4
      - id: out
        run: |
          arr=$(ls -1 services | tr '
      - uses: pnpm/action-setup@v4
        with:
          version: 9
' ',' | sed 's/,$//')
          echo "list=["${arr//,/","}"]" >> $GITHUB_OUTPUT