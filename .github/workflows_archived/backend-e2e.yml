name: Backend E2E (HTTP)

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Discover backends (NestJS/Express)
        id: set-matrix
        run: |
          node -e "const fs=require('fs');const {glob}=require('glob');glob('**/package.json',{ignore:['**/node_modules/**','.pnpm/**']},(e,files)=>{const be=files.filter(f=>{try{const j=JSON.parse(fs.readFileSync(f,'utf8'));const d={...(j.dependencies||{}),...(j.devDependencies||{})};return (Object.keys(d).some(k=>k.startsWith('@nestjs/')))||d.express;}catch{return false;}}).map(p=>({pkg:require('path').dirname(p)}));const m={include:be};console.log('::set-output name=matrix::'+JSON.stringify(m));});"
  e2e:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Build (best effort)
        run: pnpm -C ${{ matrix.pkg }} build || true
      - name: E2E
        env:
          PORT: 3100
          METRICS_PORT: 9464
          E2E_TIMEOUT_MS: 120000
        run: node scripts/e2e-backend.mjs ${{ matrix.pkg }}