
{{- if .Values.networkPolicy.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-gateway
spec:
  podSelector:
    matchLabels: { app: gateway }
  policyTypes: [Ingress, Egress]
  ingress:
    - from:
        - namespaceSelector: {}
        - ipBlock: { cidr: 10.0.0.0/8 } # cluster CIDR (adjust if needed)
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to: # DNS
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
    - to: # outbound to services
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 3000
    - to: # OTEL collector
        - podSelector:
            matchLabels: { app: otel-collector }
      ports:
        - protocol: TCP
          port: 4318
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-backends
spec:
  podSelector:
    matchExpressions:
      - key: app
        operator: In
        values: ["nutrition","activities","challenges","courses","kpis","affiliate","inbox","assessments","rewards","medical"]
  policyTypes: [Ingress, Egress]
  ingress:
    - from:
        - podSelector:
            matchLabels: { app: gateway }
        - podSelector:
            matchLabels: { app: otel-collector }
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to: # DNS
        - namespaceSelector: {}
      ports:
        - protocol: UDP
          port: 53
    - to: # DB (adjust if you scope by label/service)
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 5432
    - to: # OTEL
        - podSelector:
            matchLabels: { app: otel-collector }
      ports:
        - protocol: TCP
          port: 4318
{{- end }}
