workflows:
  monorepo_build_and_test:
    name: Monorepo Build & Test (pnpm + Prisma-safe)
    max_build_duration: 60
    environment:
      vars:
        PNPM_VERSION: "9.6.0"
        # Fallback for local codegen (NO DB connection is performed during prisma generate)
        CI_DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres?schema=public"
      node: latest
    triggering:
      events:
        - push
        - pull_request
      cancel_previous_builds: true
    scripts:
      - name: Enable Corepack & set pnpm
        script: |
          corepack enable
          corepack prepare pnpm@${PNPM_VERSION} --activate
          node -v && pnpm -v
      - name: Install dependencies (no frozen lockfile to allow cache misses)
        script: |
          pnpm install
      - name: Prepare Prisma generate (ensure env)
        script: |
          export DATABASE_URL="${DATABASE_URL:-$CI_DATABASE_URL}"
          echo "DATABASE_URL set to a non-production value for codegen."
          # Generate for any package that has Prisma
          pnpm -r --filter "./**" exec bash -lc 'if [ -f prisma/schema.prisma ] || [ -f ./src/database/prisma/schema.prisma ]; then echo "Generating Prisma in $PWD"; npx prisma generate; fi'
      - name: Type-check (where available)
        script: |
          pnpm -r --filter "./**" run typecheck || true
      - name: Build all packages
        script: |
          pnpm -r --filter "./**" run build
      - name: Run tests (if present)
        script: |
          pnpm -r --filter "./**" run test || true
    artifacts:
      - "apps/**/dist/**"
      - "services/**/dist/**"
      - "packages/**/dist/**"
    cache:
      cache_paths:
        - ~/.pnpm-store
