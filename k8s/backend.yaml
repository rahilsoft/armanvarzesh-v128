apiVersion: apps/v1
kind: Deployment
metadata: { name: arman-backend }
spec:
  replicas: 2
  selector: { matchLabels: { app: arman-backend } }
  template:
    metadata: { labels: { app: arman-backend } }
    spec:
      containers:
      - name: backend
        image: ghcr.io/arman/backend:latest
        ports: [ { containerPort: 3000 } ]
        env:
        - { name: NODE_ENV, value: "production" }
        - { name: REDIS_URL, valueFrom: { secretKeyRef: { name: arman-secrets, key: redis_url } } }
        - { name: DATABASE_URL, valueFrom: { secretKeyRef: { name: arman-secrets, key: database_url } } }
        - { name: S3_BUCKET, value: "arman-media" }
        livenessProbe: { httpGet: { path: /health/liveness, port: 3000 }, initialDelaySeconds: 20, periodSeconds: 10 }
        readinessProbe:{ httpGet: { path: /health/readiness, port: 3000 }, initialDelaySeconds: 20, periodSeconds: 10 }
---
apiVersion: v1
kind: Service
metadata: { name: arman-backend }
spec:
  selector: { app: arman-backend }
  ports: [ { port: 80, targetPort: 3000 } ]
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: { name: arman-backend }
spec:
  scaleTargetRef: { apiVersion: apps/v1, kind: Deployment, name: arman-backend }
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target: { type: Utilization, averageUtilization: 70 }
