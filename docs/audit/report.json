{
  "score": 71,
  "score_breakdown": {
    "security": 5,
    "reliability": 12,
    "code_quality": 15,
    "tests": 9,
    "performance": 8,
    "platform_matrix": 10,
    "ci_cd": 10,
    "docs": 2
  },
  "risks": [
    {
      "id": "SEC-JWT-INLINE",
      "path": "armanvarzesh v81/devops/kubernetes/secrets.yaml",
      "line": 8,
      "excerpt": "JWT_SECRET: \"c2VjcmV0MTIzNCE=\""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/devops/kubernetes/secrets.yaml",
      "line": 8,
      "excerpt": "SECRET: \"c2VjcmV0MTIzNCE=\""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/admin/components/RBAC.tsx",
      "line": 5,
      "excerpt": "token=process.env.TOKEN || "changeme""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/auth.service.spec.ts",
      "line": 12,
      "excerpt": "password: 'secret123'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/e2e.integration.spec.ts",
      "line": 66,
      "excerpt": "password: 'secret123'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/test/admin.jwt.guard.spec.ts",
      "line": 10,
      "excerpt": "SECRET = process.env.SECRET || "changeme""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/test/admin.controller.spec.ts",
      "line": 7,
      "excerpt": "SECRET = process.env.SECRET || "changeme""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/test/unit/auth.service.spec.ts",
      "line": 15,
      "excerpt": "password: 'hashedpw'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/test/e2e/auth.e2e-spec.ts",
      "line": 21,
      "excerpt": "password = 'P@ssw0rd!'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/dist/database/seeds/seed_users.js",
      "line": 8,
      "excerpt": "password: 'hashed-password'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/scripts/docker-compose.yml",
      "line": 31,
      "excerpt": "API_KEY= \"__CHANGE_ME__\""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/e2e/payments.webhook.e2e.spec.ts",
      "line": 12,
      "excerpt": "secret = process.env.SECRET || "changeme""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/backend/src/database/seeds/seed_users.ts",
      "line": 8,
      "excerpt": "password: 'hashed-password'"
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/app/site/pages/admin/login.tsx",
      "line": 14,
      "excerpt": "token=process.env.TOKEN || "changeme""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/tests/backend/mocks/user.mock.ts",
      "line": 7,
      "excerpt": "password: \"hashedpassword\""
    },
    {
      "id": "SEC-SECRET-HARDCODED",
      "path": "armanvarzesh v81/docs/audit/Test_Plan_and_Specs.md",
      "line": 33,
      "excerpt": "password: 'P@ssw0rd!'"
    }
  ],
  "packages": [
    {
      "path": "armanvarzesh v81",
      "name": "armanvarzesh-monorepo",
      "private": true,
      "type": "Lib",
      "scripts": {
        "lint": "pnpm -r --if-present run lint",
        "format": "turbo run format",
        "typecheck": "pnpm -r --if-present run typecheck",
        "test": "pnpm -r --if-present run test",
        "build": "pnpm -r --if-present run build",
        "build:backend": "pnpm --filter ./app/backend run build",
        "build:vitrin": "pnpm --filter ./app/vitrin-site run build",
        "build:user": "pnpm --filter ./app/user-app run build || true",
        "build:coach": "pnpm --filter ./app/coach-app run build || true",
        "test:cov": "pnpm -r test:cov",
        "format:check": "pnpm -r format:check || echo 'no format'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "clean": "rimraf dist || true",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "env:collect": "node tools/env/collect-env.cjs",
        "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
        "audit:prod": "pnpm audit --prod",
        "audit:full": "pnpm audit",
        "optimize:assets": "node scripts/optimize-assets.mjs",
        "postinstall": "echo ok",
        "check:repo": "node scripts/verify-clean.mjs",
        "db:init:plan": "echo 'Run per-service migrations/PLAN_stage08/db_init.sh'",
        "test:e2e:flow": "node -e \"console.log('Configure jest with tools/e2e/jest.config.e2e.js')\"",
        "start:prod": "node dist/main.js",
        "check:dups": "node scripts/detect-duplicates.mjs | jq 'keys' && test $(node scripts/detect-duplicates.mjs | jq 'keys | length') -eq 0",
        "check:score": "node scripts/score.mjs > .reports/score.json && cat .reports/score.json | jq 'map(.s) | {min:(min),avg:(add/length),max:(max)}'",
        "smoke": "node scripts/smoke-security.mjs",
        "e2e:backend": "node scripts/e2e-backend.mjs",
        "openapi:validate": "node scripts/validate-openapi.mjs",
        "changeset": "changeset",
        "version-packages": "changeset version",
        "publish-packages": "changeset publish",
        "version": "changeset version",
        "coverage:report": "pnpm -r test -- --coverage"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": true,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": true,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/coach-app",
      "name": "@arman/coach-app",
      "private": true,
      "type": "Coach",
      "scripts": {
        "start": "expo start",
        "android": "expo start --android",
        "ios": "expo start --ios",
        "web": "expo start --web",
        "build": "tsc -p tsconfig.json",
        "dev": "nodemon --watch src --exec ts-node src/main.ts",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "codegen": "graphql-codegen"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": true,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/user-pwa",
      "name": "@arman/user-pwa",
      "private": true,
      "type": "User",
      "scripts": {
        "dev": "vite",
        "build": "tsc -b && vite build",
        "preview": "vite preview",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "lint": "eslint .",
        "test": "echo \"no tests\" && exit 0",
        "start": "node dist/index.js || echo \"no start\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/admin",
      "name": "@arman/armanfit-admin",
      "private": true,
      "type": "Admin",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "dev": "ts-node src/main.ts",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "storybook": "storybook dev -p 6007",
        "build-storybook": "storybook build",
        "preview": "vite preview",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": true,
      "hasPrismaSchema": false,
      "hasManifest": true,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/user",
      "name": "@app/user",
      "private": true,
      "type": "User",
      "scripts": {},
      "hasDockerfile": false,
      "hasTsconfig": false,
      "hasJest": false,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": true,
      "hasPrismaSchema": false,
      "hasManifest": true,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/backend",
      "name": "@arman/backend",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node -r tsconfig-paths/register dist/main.js",
        "start:dev": "nest start --watch",
        "build": "tsc -p tsconfig.build.json",
        "typecheck:full": "tsc -p tsconfig.json --noEmit",
        "prisma:generate": "prisma generate --schema src/database/prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --schema src/database/prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema ./src/database/prisma/schema.prisma",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test:e2e": "jest -c e2e/jest.e2e.config.ts",
        "e2e": "vitest run -r ./e2e",
        "prisma:studio": "prisma studio --schema src/database/prisma/schema.prisma",
        "seed": "ts-node -r tsconfig-paths/register src/scripts/seed.ts || echo \"seed skipped\"",
        "dev": "ts-node -r tsconfig-paths/register src/main.ts",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "start:prod": "node -r tsconfig-paths/register dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/media-worker",
      "name": "@arman/media-worker",
      "private": true,
      "type": "Lib",
      "scripts": {
        "dev": "tsx src/worker.ts",
        "start": "node --enable-source-maps dist/worker.js",
        "build": "tsc -p tsconfig.json",
        "lint": "eslint . --ext .ts || echo 'no eslint'",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test": "jest --runInBand --passWithNoTests",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/coach",
      "name": "@app/coach",
      "private": true,
      "type": "Coach",
      "scripts": {},
      "hasDockerfile": false,
      "hasTsconfig": false,
      "hasJest": false,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": true,
      "hasPrismaSchema": false,
      "hasManifest": true,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/live-subgraph",
      "name": "@arman/live-subgraph",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/site",
      "name": "@arman/vitrin-site",
      "private": true,
      "type": "Web",
      "scripts": {
        "dev": "next dev",
        "build": "next build",
        "start": "next start",
        "storybook": "storybook dev -p 6006",
        "build-storybook": "storybook build",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "analyze": "ANALYZE=true next build",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "e2e": "playwright test",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "sitemap": "next-sitemap",
        "seo:audit": "echo 'Run lighthouse locally'",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": true,
      "hasPrismaSchema": false,
      "hasManifest": true,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/activity-subgraph",
      "name": "@arman/activity-subgraph",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/coach-pwa",
      "name": "@arman/coach-pwa",
      "private": true,
      "type": "Coach",
      "scripts": {
        "dev": "vite",
        "build": "tsc -b && vite build",
        "preview": "vite preview",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "lint": "eslint .",
        "test": "echo \"no tests\" && exit 0",
        "start": "node dist/index.js || echo \"no start\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/user-app",
      "name": "@arman/user-app",
      "private": true,
      "type": "User",
      "scripts": {
        "start": "expo start",
        "android": "expo start --android",
        "ios": "expo start --ios",
        "web": "expo start --web",
        "build": "tsc -p tsconfig.json",
        "dev": "nodemon --watch src --exec ts-node src/main.ts",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "start:prod": "node dist/main.js",
        "codegen": "graphql-codegen"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": true,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/app/social-subgraph",
      "name": "@arman/social-subgraph",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/contracts/nutrition",
      "name": "@contracts/nutrition",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "test": "echo \"no tests\" && exit 0",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "lint": "eslint . --max-warnings=0 --ext .ts,.tsx,.js,.jsx || echo \"eslint not configured\"",
        "start": "node dist/index.js || echo \"no start\"",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/contracts/notifications",
      "name": "@contracts/notifications",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "test": "echo \"no tests\" && exit 0",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "lint": "eslint . --max-warnings=0 --ext .ts,.tsx,.js,.jsx || echo \"eslint not configured\"",
        "start": "node dist/index.js || echo \"no start\"",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/mobile/user",
      "name": "@mobile/user",
      "private": true,
      "type": "User",
      "scripts": {
        "start": "echo 'stub mobile app — add Expo later'"
      },
      "hasDockerfile": false,
      "hasTsconfig": false,
      "hasJest": false,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": true,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/mobile/coach",
      "name": "@mobile/coach",
      "private": true,
      "type": "Coach",
      "scripts": {
        "start": "echo 'stub mobile app — add Expo later'"
      },
      "hasDockerfile": false,
      "hasTsconfig": false,
      "hasJest": false,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": true,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/sdk",
      "name": "@arman/sdk",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "test": "echo \"no tests\" && exit 0",
        "lint": "eslint . --max-warnings=0 --ext .ts,.tsx,.js,.jsx || echo \"eslint not configured\"",
        "start": "node dist/index.js || echo \"no start\"",
        "dev": "ts-node src/index.ts || echo \"no dev\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/ui",
      "name": "@arman/ui",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc --noEmit",
        "lint": "eslint .",
        "test": "echo \"no tests\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/infra",
      "name": "@arman/infra",
      "private": true,
      "type": "Lib",
      "scripts": {
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/awards-engine",
      "name": "@arman/awards-engine",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/web-core",
      "name": "@arman/web-core",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/env-config",
      "name": "@arman/env-config",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/auth",
      "name": "@arman/auth",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/ui-components",
      "name": "@arman/ui-components",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/integration",
      "name": "@arman/integration",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "vitest run",
        "clean": "rimraf dist || true",
        "lint": "eslint . --ext .ts,.tsx,.js",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "start": "node dist/main.js",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/contracts",
      "name": "@arman/contracts",
      "private": false,
      "type": "Lib",
      "scripts": {
        "test": "node tests/sample-consumer.mjs",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "build": "tsc -p tsconfig.json || echo \"no tsc\"",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/utils",
      "name": "@arman/utils",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/shared",
      "name": "@arman/shared",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/observability",
      "name": "@arman/observability",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "clean": "rimraf dist",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/state",
      "name": "@arman/state",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/observability-sdk",
      "name": "@arman/observability-sdk",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts src/register.ts --dts --format esm,cjs --out-dir dist --clean",
        "dev": "tsup src/index.ts src/register.ts --watch --dts --format esm,cjs --out-dir dist",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "test": "echo \"no tests\" && exit 0",
        "lint": "eslint . --max-warnings=0 --ext .ts,.tsx,.js,.jsx || echo \"eslint not configured\"",
        "start": "node dist/index.js || echo \"no start\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/storage",
      "name": "@arman/storage",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/security-middleware",
      "name": "@arman/security-middleware",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "dev": "tsup src/index.ts --watch --dts --format esm,cjs --out-dir dist",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "test": "echo \"no tests\" && exit 0",
        "lint": "eslint . --max-warnings=0 --ext .ts,.tsx,.js,.jsx || echo \"eslint not configured\"",
        "start": "node dist/index.js || echo \"no start\""
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/libs",
      "name": "@arman/libs",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/contracts-tests",
      "name": "@arman/contracts-tests",
      "private": true,
      "type": "Lib",
      "scripts": {
        "test": "jest",
        "snapshot": "node scripts/make-snapshot.js",
        "build": "tsc -p tsconfig.json || echo \"no tsc\"",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/graphql-dataloader",
      "name": "@arman/graphql-dataloader",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "clean": "rimraf dist",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/integrations",
      "name": "@arman/integrations",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/index.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "dev": "tsc -w"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/integrations/livekit",
      "name": "@arman/integrations-livekit",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/async-utils",
      "name": "@arman/async-utils",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/resilience",
      "name": "@arman/resilience",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "clean": "rimraf dist",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/theme",
      "name": "@arman/theme",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "echo \"No TypeScript in package\"",
        "typecheck": "echo \"No TS to typecheck\"",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/graphql",
      "name": "@arman/graphql",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "echo \"No TypeScript in package\"",
        "typecheck": "echo \"No TS to typecheck\"",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "codegen": "graphql-codegen",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/ui-kit-live",
      "name": "@arman/ui-kit-live",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/http-client",
      "name": "@arman/http-client",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "jest",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/cache-std",
      "name": "@arman/cache-std",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "clean": "rimraf dist",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/service-kit",
      "name": "@arman/service-kit",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "vitest run",
        "clean": "rimraf dist || true",
        "lint": "eslint . --ext .ts,.tsx,.js",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "start": "node dist/main.js",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/client-live",
      "name": "@arman/client-live",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/auth-kit",
      "name": "@arman/auth-kit",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/ui-tokens",
      "name": "@arman/ui-tokens",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx",
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/graphql-utils",
      "name": "@arman/graphql-utils",
      "private": true,
      "type": "Lib",
      "scripts": {
        "test": "jest --passWithNoTests",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.json --noEmit || echo 'no tsconfig'",
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "start": "node dist/main.js || next start -p 3000 || echo \"no start\"",
        "lint": "eslint . --ext .ts,.tsx || echo \"no lint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "dev": "nodemon --exec ts-node src/main.ts || echo \"dev script placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/packages/training-load-engine",
      "name": "@arman/training-load-engine",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "start": "node dist/index.js || node dist/server.js || node dist/main.js",
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts || node dist/index.js"
      },
      "hasDockerfile": false,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/rewards-service",
      "name": "@arman/rewards-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/payments-service",
      "name": "payments-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "dev": "ts-node src/main.ts",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/predictive-service",
      "name": "predictive-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/certificate-service",
      "name": "@arman/certificate-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.json",
        "dev": "ts-node-dev --respawn --transpile-only src/main.ts",
        "test": "jest",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/ai-service",
      "name": "ai-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/analytics-collector",
      "name": "@arman/analytics-collector",
      "private": true,
      "type": "Lib",
      "scripts": {
        "dev": "node --watch --loader ts-node/esm src/index.ts",
        "build": "tsc -p tsconfig.json",
        "start": "node dist/index.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint ."
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/vip-service",
      "name": "vip-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "start:dev": "ts-node -r tsconfig-paths/register src/main.ts",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/api-gateway",
      "name": "api-gateway",
      "private": true,
      "type": "Lib",
      "scripts": {
        "dev": "node --watch src/main.js",
        "start": "node src/main.js",
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint ."
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/physio-service",
      "name": "@arman/physio-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/nutrition-service",
      "name": "nutrition-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/assessments-service",
      "name": "@arman/assessments-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/reward-service",
      "name": "reward-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "start:dev": "ts-node -r tsconfig-paths/register src/main.ts",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/chat-service",
      "name": "chat-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/marketplace-service",
      "name": "marketplace-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/media-worker",
      "name": "@arman/media-worker__media-worker",
      "private": true,
      "type": "Lib",
      "scripts": {
        "build": "tsup src/index.ts --dts --format esm,cjs --out-dir dist --clean",
        "start": "node dist/main.js",
        "start:dev": "tsx src/main.ts",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:cov": "vitest run --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "dev": "ts-node src/main.ts",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "test:e2e": "echo \"e2e placeholder\"",
        "prepare": "husky install || true",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/assessment-service",
      "name": "assessment-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/monitoring-service",
      "name": "monitoring-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/analytics-service",
      "name": "@arman/analytics-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/coaches-service",
      "name": "coaches-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/workers",
      "name": "@arman/workers",
      "private": false,
      "type": "Lib",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/index.js",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "dev": "tsc -w"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/workers/bullmq-worker",
      "name": "bullmq-worker",
      "private": true,
      "type": "Lib",
      "scripts": {
        "start": "node ./src/index.js",
        "build": "echo \"No TypeScript in package\"",
        "typecheck": "echo \"No TS to typecheck\"",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "dev": "tsc -w"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/notifications-service",
      "name": "notifications-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "dev": "ts-node src/main.ts",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "test:e2e": "jest --runInBand --config jest.config.ts --testPathPattern=tests/e2e/",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/workouts-service",
      "name": "workouts-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "dev": "ts-node src/main.ts",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "test:e2e": "jest --runInBand --config jest.config.ts --testPathPattern=tests/e2e/",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "test:cov": "jest --coverage",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "format": "prettier --write .",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/auth-service",
      "name": "auth-service",
      "private": true,
      "type": "Lib",
      "scripts": {
        "start": "node dist/main.js",
        "dev": "node --watch src/main.js",
        "build": "tsc -p tsconfig.build.json",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "test": "echo \"No tests yet\" && exit 0",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "prisma:generate": "prisma generate",
        "prisma:migrate": "prisma migrate deploy"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/content-service",
      "name": "content-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/booking-service",
      "name": "@arman/booking-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "build": "tsc -p tsconfig.build.json",
        "start": "node dist/main.js",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "clean": "rimraf dist || rm -rf dist",
        "start:prod": "node dist/main.js",
        "lint": "eslint .",
        "test": "echo \"NO_TESTS\" && exit 0",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": false,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/challenges-service",
      "name": "challenges-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/courses-service",
      "name": "courses-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/users-service",
      "name": "users-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js",
        "start:dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/main.ts || nest start --watch"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": true,
      "hasManifest": false,
      "hasServiceWorker": false
    },
    {
      "path": "armanvarzesh v81/services/affiliate-service",
      "name": "affiliate-service",
      "private": true,
      "type": "Back",
      "scripts": {
        "start": "node dist/main.js",
        "start:dev": "ts-node -r tsconfig-paths/register src/main.ts",
        "build": "tsc -p tsconfig.build.json",
        "lint": "pnpm -w exec eslint . --ext .ts,.tsx || echo \"no eslint\"",
        "format": "prettier --write .",
        "test:cov": "jest --coverage --runInBand",
        "test": "jest --passWithNoTests || vitest run || echo \"no tests\"",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "dev": "ts-node src/main.ts",
        "prisma:generate": "prisma generate --schema prisma/schema.prisma",
        "prisma:migrate:dev": "prisma migrate dev --name init --schema prisma/schema.prisma",
        "prisma:migrate:deploy": "prisma migrate deploy --schema prisma/schema.prisma",
        "prisma:db:push": "prisma db push --schema prisma/schema.prisma",
        "typecheck": "tsc -p tsconfig.build.json --noEmit",
        "format:check": "prettier -c . || echo \"no prettier\"",
        "clean": "rimraf dist || true",
        "prepare": "husky install || true",
        "prisma:migrate": "prisma migrate deploy",
        "prisma:studio": "prisma studio",
        "start:prod": "node dist/main.js"
      },
      "hasDockerfile": true,
      "hasTsconfig": true,
      "hasJest": true,
      "hasEslint": true,
      "hasPrettier": false,
      "hasExpoApp": false,
      "hasNextConfig": false,
      "hasPrismaSchema": false,
      "hasManifest": false,
      "hasServiceWorker": false
    }
  ],
  "matrix": [
    {
      "Feature": "Auth",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Users",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Coach",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Workout",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Nutrition",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Payments",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Chat",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Notifications",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    },
    {
      "Feature": "Analytics",
      "Coach:PWA": "green",
      "Coach:iOS": "green",
      "Coach:Android": "green",
      "User:PWA": "green",
      "User:iOS": "green",
      "User:Android": "green",
      "Admin:Web": "green",
      "Admin:PWA": "green",
      "Site:Web": "green",
      "Site:PWA": "green"
    }
  ],
  "feature_refs": {
    "Auth": [
      "armanvarzesh v81/STEP21_AUTH_REPORT.md",
      "armanvarzesh v81/documentation/API/auth.md",
      "armanvarzesh v81/app/coach-app/context/AuthContext.tsx",
      "armanvarzesh v81/app/coach-app/auth/AuthProvider.tsx",
      "armanvarzesh v81/app/coach-app/navigation/AuthStack.tsx"
    ],
    "Users": [
      "armanvarzesh v81/lighthouserc.main.json",
      "armanvarzesh v81/lighthouserc.json",
      "armanvarzesh v81/migrations/001_init_users.sql",
      "armanvarzesh v81/documentation/API/user.md",
      "armanvarzesh v81/tools/e2e/coach_user.pwa-login-reserve.e2e.ts"
    ],
    "Coach": [
      "armanvarzesh v81/documentation/API/coach.md",
      "armanvarzesh v81/tools/api-map/server-stubs/ready/gql_CoachAvailability.resolver.ready.ts",
      "armanvarzesh v81/tools/api-map/server-stubs/ready/gql_CoachReservations.resolver.ready.ts",
      "armanvarzesh v81/tools/api-map/parity-graphql/CoachAvailability.resolver.example.ts",
      "armanvarzesh v81/tools/api-map/parity-graphql/CoachReservations.resolver.example.ts"
    ],
    "Workout": [
      "armanvarzesh v81/documentation/API/workout.md",
      "armanvarzesh v81/app/coach-app/screens/WorkoutApproveScreen.tsx",
      "armanvarzesh v81/app/coach-app/components/Workouts/WorkoutReviewCard.tsx",
      "armanvarzesh v81/app/coach-app/graphql/mutations/workout.mutations.ts",
      "armanvarzesh v81/app/coach-app/graphql/queries/workout.queries.ts"
    ],
    "Nutrition": [
      "armanvarzesh v81/README_NUTRITION_MODULE.md",
      "armanvarzesh v81/documentation/API/nutrition.md",
      "armanvarzesh v81/app/coach-app/screens/NutritionAdviceScreen.tsx",
      "armanvarzesh v81/app/coach-app/components/Nutrition/AdviceCard.tsx",
      "armanvarzesh v81/app/coach-app/src/features/NutritionScreen.tsx"
    ],
    "Payments": [
      "armanvarzesh v81/documentation/API/payment.md",
      "armanvarzesh v81/tools/e2e/flow.reservation-payment-notification.e2e.ts",
      "armanvarzesh v81/app/coach-app/screens/PaymentScreen.tsx",
      "armanvarzesh v81/app/coach-app/components/Common/PaymentCard.tsx",
      "armanvarzesh v81/app/coach-app/graphql/queries/payment.queries.ts"
    ],
    "Chat": [
      "armanvarzesh v81/tools/api-map/server-stubs/ready/rest_GET__api_chat.controller.ready.ts",
      "armanvarzesh v81/app/coach-app/screens/ChatScreen.tsx",
      "armanvarzesh v81/app/coach-app/graphql/mutations/chat.mutations.ts",
      "armanvarzesh v81/app/coach-app/graphql/queries/chat.queries.ts",
      "armanvarzesh v81/app/coach-app/graphql/subscriptions/chat.subs.ts"
    ],
    "Notifications": [
      "armanvarzesh v81/documentation/API/notification.md",
      "armanvarzesh v81/tools/e2e/flow.reservation-payment-notification.e2e.ts",
      "armanvarzesh v81/app/coach-app/screens/NotificationsScreen.tsx",
      "armanvarzesh v81/app/coach-app/components/Common/NotificationItem.tsx",
      "armanvarzesh v81/app/coach-app/graphql/mutations/notification.mutations.ts"
    ],
    "Analytics": [
      "armanvarzesh v81/tools/api-map/server-stubs/ready/rest_GET__api_analytics.controller.ready.ts",
      "armanvarzesh v81/tools/api-map/server-stubs/ready/rest_GET__analytics.controller.ready.ts",
      "armanvarzesh v81/app/coach-app/screens/AnalyticsScreen.tsx",
      "armanvarzesh v81/app/coach-app/src/features/analytics/index.tsx",
      "armanvarzesh v81/app/coach-app/src/features/analytics/Screen.tsx"
    ]
  },
  "app_paths": {
    "Coach:iOS": [
      "armanvarzesh v81/app/coach-app",
      "armanvarzesh v81/mobile/coach"
    ],
    "Coach:Android": [
      "armanvarzesh v81/app/coach-app",
      "armanvarzesh v81/mobile/coach"
    ],
    "Admin:Web": [
      "armanvarzesh v81/app/admin"
    ],
    "Admin:PWA": [
      "armanvarzesh v81/app/admin"
    ],
    "User:PWA": [
      "armanvarzesh v81/app/user"
    ],
    "Coach:PWA": [
      "armanvarzesh v81/app/coach"
    ],
    "Site:Web": [
      "armanvarzesh v81/app/site"
    ],
    "Site:PWA": [
      "armanvarzesh v81/app/site"
    ],
    "User:iOS": [
      "armanvarzesh v81/app/user-app",
      "armanvarzesh v81/mobile/user"
    ],
    "User:Android": [
      "armanvarzesh v81/app/user-app",
      "armanvarzesh v81/mobile/user"
    ]
  },
  "ci_workflows": [
    ".github/workflows/preview-env.yml",
    ".github/workflows/docker-publish.yml",
    ".github/workflows/openapi-export.yml",
    ".github/workflows/lighthouse-main.yml",
    ".github/workflows/release.yml",
    ".github/workflows/content_service_tests.yml",
    ".github/workflows/security.yml",
    ".github/workflows/parity-and-build.yml",
    ".github/workflows/contracts.yml",
    ".github/workflows/dry-run.yml",
    ".github/workflows/ci-unified.yml",
    ".github/workflows/publish-ghcr.yml",
    ".github/workflows/openapi-validate.yml",
    ".github/workflows/container-scan.yml",
    ".github/workflows/e2e_vitrin.yml",
    ".github/workflows/eas-build-multi.yml",
    ".github/workflows/ci-e2e-contracts.yml",
    ".github/workflows/ci-tests.yml",
    ".github/workflows/changesets.yml",
    ".github/workflows/monorepo-turbo.yml",
    ".github/workflows/codeql.yml",
    ".github/workflows/release-candidate.yml",
    ".github/workflows/phase5-validation.yml",
    ".github/workflows/trivy.yml",
    ".github/workflows/sca-audit.yml",
    ".github/workflows/security-trivy-images.yml",
    ".github/workflows/security-semgrep.yml",
    ".github/workflows/common-node-pnpm.yaml",
    ".github/workflows/live-ci.yml",
    ".github/workflows/container-cd-template.yml",
    ".github/workflows/backend-ci.yml",
    ".github/workflows/backend-e2e.yml",
    ".github/workflows/migrations.yml",
    ".github/workflows/reusable-node-pnpm.yml",
    ".github/workflows/security-trivy.yml",
    ".github/workflows/perf-k6-advanced.yml",
    ".github/workflows/loadtest.yml",
    ".github/workflows/env-allowlist.yml",
    ".github/workflows/lighthouse.yml",
    ".github/workflows/preview-api.yml",
    ".github/workflows/docker-ghcr.yml",
    ".github/workflows/perf-k6.yml",
    ".github/workflows/ci-lint.yml",
    ".github/workflows/build-test-parity.yml",
    ".github/workflows/gitleaks.yml",
    ".github/workflows/docs-verify.yml",
    ".github/workflows/security-smoke.yml",
    ".github/workflows/vitrin-ci.yml",
    ".github/workflows/vitrin-lighthouse.yml",
    ".github/workflows/sbom.yml",
    ".github/workflows/secret-scan.yml",
    ".github/workflows/security-gitleaks.yml",
    ".github/workflows/security-scan.yml",
    ".github/workflows/vitrin-e2e.yml",
    ".github/workflows/full-ci.yml",
    ".github/workflows/monorepo-ci.yml",
    ".github/workflows/security-scans.yml",
    ".github/workflows/docker.yml",
    ".github/workflows/build-test.yml",
    ".github/workflows/release-dryrun.yml",
    ".github/workflows/ci.yml",
    ".github/workflows/env-guard.yml",
    ".github/workflows/build-score.yml",
    ".github/workflows/services-ci.yml",
    ".github/workflows/preview-web.yml",
    ".github/workflows/build-matrix.yml",
    ".github/workflows/dependency-audit.yml"
  ],
  "dockerfiles": [
    "armanvarzesh v81/app/coach-app/Dockerfile",
    "armanvarzesh v81/app/admin/Dockerfile",
    "armanvarzesh v81/app/backend/Dockerfile",
    "armanvarzesh v81/app/backend/scripts/Dockerfile",
    "armanvarzesh v81/app/media-worker/Dockerfile",
    "armanvarzesh v81/app/live-subgraph/Dockerfile",
    "armanvarzesh v81/app/site/Dockerfile",
    "armanvarzesh v81/app/activity-subgraph/Dockerfile",
    "armanvarzesh v81/app/user-app/Dockerfile",
    "armanvarzesh v81/app/social-subgraph/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/infra/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/awards-engine/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/web-core/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/env-config/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/auth/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/ui-components/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/integration/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/contracts/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/utils/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/shared/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/observability/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/state/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/storage/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/libs/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/contracts-tests/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/graphql-dataloader/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/integrations/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/integrations/livekit/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/async-utils/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/resilience/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/theme/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/graphql/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/http-client/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/cache-std/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/client-live/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/auth-kit/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/ui-tokens/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/graphql-utils/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/packages/training-load-engine/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/services/rewards-service/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/services/physio-service/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/services/assessments-service/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/services/analytics-service/Dockerfile",
    "armanvarzesh v81/contracts/deploy-templates/services/booking-service/Dockerfile",
    "armanvarzesh v81/packages/ui-components/Dockerfile",
    "armanvarzesh v81/packages/contracts/Dockerfile",
    "armanvarzesh v81/packages/shared/Dockerfile",
    "armanvarzesh v81/packages/service-kit/Dockerfile",
    "armanvarzesh v81/packages/ui-tokens/Dockerfile",
    "armanvarzesh v81/services/rewards-service/Dockerfile",
    "armanvarzesh v81/services/payments-service/Dockerfile",
    "armanvarzesh v81/services/predictive-service/Dockerfile",
    "armanvarzesh v81/services/certificate-service/Dockerfile",
    "armanvarzesh v81/services/ai-service/Dockerfile",
    "armanvarzesh v81/services/analytics-collector/Dockerfile",
    "armanvarzesh v81/services/vip-service/Dockerfile",
    "armanvarzesh v81/services/api-gateway/Dockerfile",
    "armanvarzesh v81/services/physio-service/Dockerfile",
    "armanvarzesh v81/services/nutrition-service/Dockerfile",
    "armanvarzesh v81/services/assessments-service/Dockerfile",
    "armanvarzesh v81/services/reward-service/Dockerfile",
    "armanvarzesh v81/services/chat-service/Dockerfile",
    "armanvarzesh v81/services/marketplace-service/Dockerfile",
    "armanvarzesh v81/services/media-worker/Dockerfile",
    "armanvarzesh v81/services/assessment-service/Dockerfile",
    "armanvarzesh v81/services/monitoring-service/Dockerfile",
    "armanvarzesh v81/services/analytics-service/Dockerfile",
    "armanvarzesh v81/services/coaches-service/Dockerfile",
    "armanvarzesh v81/services/workers/Dockerfile",
    "armanvarzesh v81/services/workers/bullmq-worker/Dockerfile",
    "armanvarzesh v81/services/notifications-service/Dockerfile",
    "armanvarzesh v81/services/workouts-service/Dockerfile",
    "armanvarzesh v81/services/auth-service/Dockerfile",
    "armanvarzesh v81/services/content-service/Dockerfile",
    "armanvarzesh v81/services/booking-service/Dockerfile",
    "armanvarzesh v81/services/challenges-service/Dockerfile",
    "armanvarzesh v81/services/courses-service/Dockerfile",
    "armanvarzesh v81/services/users-service/Dockerfile",
    "armanvarzesh v81/services/affiliate-service/Dockerfile"
  ],
  "compose": [
    "armanvarzesh v81/docker-compose.yml",
    "armanvarzesh v81/app/backend/scripts/docker-compose.yml"
  ],
  "k8s": [
    "armanvarzesh v81/devops/kubernetes/secrets.yaml",
    "armanvarzesh v81/devops/kubernetes/ingress.yaml",
    "armanvarzesh v81/devops/kubernetes/backend-service.yaml",
    "armanvarzesh v81/devops/kubernetes/admin-panel-deployment.yaml",
    "armanvarzesh v81/devops/kubernetes/mobile-deployment.yaml",
    "armanvarzesh v81/devops/kubernetes/configmap.yaml",
    "armanvarzesh v81/devops/kubernetes/frontend-deployment.yaml",
    "armanvarzesh v81/devops/kubernetes/backend-deployment.yaml",
    "armanvarzesh v81/devops/kubernetes/mobile-service.yaml",
    "armanvarzesh v81/devops/kubernetes/frontend-service.yaml",
    "armanvarzesh v81/devops/kubernetes/admin-panel-service.yaml",
    "armanvarzesh v81/deploy/k8s/content-service-blue.yaml",
    "armanvarzesh v81/deploy/k8s/vitrin-site-blue.yaml",
    "armanvarzesh v81/deploy/helm/values-canary.yaml",
    "armanvarzesh v81/deploy/helm/charts/vitrin-site/Chart.yaml",
    "armanvarzesh v81/deploy/helm/charts/vitrin-site/values.yaml",
    "armanvarzesh v81/deploy/helm/charts/vitrin-site/templates/deployment.yaml",
    "armanvarzesh v81/deploy/helm/charts/vitrin-site/templates/ingress.yaml",
    "armanvarzesh v81/deploy/helm/charts/vitrin-site/templates/hpa.yaml",
    "armanvarzesh v81/deploy/helm/charts/backend/Chart.yaml",
    "armanvarzesh v81/deploy/helm/charts/backend/values.yaml",
    "armanvarzesh v81/deploy/helm/charts/backend/templates/deployment.yaml",
    "armanvarzesh v81/deploy/helm/charts/backend/templates/ingress.yaml",
    "armanvarzesh v81/deploy/helm/charts/backend/templates/hpa.yaml",
    "armanvarzesh v81/deploy/helm/charts/service/Chart.yaml",
    "armanvarzesh v81/deploy/helm/charts/service/values.yaml",
    "armanvarzesh v81/deploy/helm/charts/service/templates/deployment.yaml",
    "armanvarzesh v81/deploy/helm/charts/service/templates/ingress.yaml",
    "armanvarzesh v81/deploy/helm/charts/service/templates/hpa.yaml",
    "armanvarzesh v81/deploy/helm/umbrella/Chart.yaml",
    "armanvarzesh v81/deploy/helm/umbrella/values.prod.yaml",
    "armanvarzesh v81/deploy/helm/umbrella/values.yaml",
    "armanvarzesh v81/deploy/helm/umbrella/values.staging.yaml",
    "armanvarzesh v81/k8s/10-configmap.yaml",
    "armanvarzesh v81/k8s/svc-monitoring-service.yaml",
    "armanvarzesh v81/k8s/client-pwa.yaml",
    "armanvarzesh v81/k8s/svc-assessment-service.yaml",
    "armanvarzesh v81/k8s/svc-vip-service.yaml",
    "armanvarzesh v81/k8s/00-namespace.yaml",
    "armanvarzesh v81/k8s/ingress.yaml",
    "armanvarzesh v81/k8s/svc-nutrition-service.yaml",
    "armanvarzesh v81/k8s/svc-ai-service.yaml",
    "armanvarzesh v81/k8s/backend-ingress.yaml",
    "armanvarzesh v81/k8s/svc-chat-service.yaml",
    "armanvarzesh v81/k8s/svc-affiliate-service.yaml",
    "armanvarzesh v81/k8s/users-service.yaml",
    "armanvarzesh v81/k8s/svc-challenges-service.yaml",
    "armanvarzesh v81/k8s/coach-pwa.yaml",
    "armanvarzesh v81/k8s/svc-notifications-service.yaml",
    "armanvarzesh v81/k8s/users-deployment.yaml",
    "armanvarzesh v81/k8s/svc-marketplace-service.yaml",
    "armanvarzesh v81/k8s/svc-coaches-service.yaml",
    "armanvarzesh v81/k8s/svc-workouts-service.yaml",
    "armanvarzesh v81/k8s/svc-users-service.yaml",
    "armanvarzesh v81/k8s/svc-payments-service.yaml",
    "armanvarzesh v81/k8s/svc-content-service.yaml",
    "armanvarzesh v81/k8s/svc-auth-service.yaml",
    "armanvarzesh v81/k8s/certificate-service.yaml",
    "armanvarzesh v81/k8s/media-worker.yaml",
    "armanvarzesh v81/k8s/svc-predictive-service.yaml",
    "armanvarzesh v81/k8s/backend.yaml",
    "armanvarzesh v81/k8s/backend-deployment.yaml",
    "armanvarzesh v81/k8s/svc-reward-service.yaml",
    "armanvarzesh v81/k8s/admin-panel.yaml",
    "armanvarzesh v81/k8s/svc-courses-service.yaml",
    "armanvarzesh v81/k8s/canary/ingress-canary-example.yaml",
    "armanvarzesh v81/k8s/security/namespace-pss.yaml",
    "armanvarzesh v81/k8s/security/securityContext-example.yaml",
    "armanvarzesh v81/k8s/secrets/courses-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/users-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/predictive-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/monitoring-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/payments-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/auth-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/backend.secret.yaml",
    "armanvarzesh v81/k8s/secrets/armanfit-admin.secret.yaml",
    "armanvarzesh v81/k8s/secrets/coach-app.secret.yaml",
    "armanvarzesh v81/k8s/secrets/content-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/chat-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/challenges-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/nutrition-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/coaches-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/marketplace-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/vip-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/reward-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/notifications-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/ai-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/media-worker.secret.yaml",
    "armanvarzesh v81/k8s/secrets/assessment-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/workouts-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/affiliate-service.secret.yaml",
    "armanvarzesh v81/k8s/secrets/user-app.secret.yaml",
    "armanvarzesh v81/k8s/secrets/vitrin-site.secret.yaml",
    "armanvarzesh v81/k8s/external-secrets/backend-external-secret.yaml",
    "armanvarzesh v81/charts/arman-live/templates/servicemonitor.yaml",
    "armanvarzesh v81/charts/arman-live/templates/prometheusrule.yaml",
    "armanvarzesh v81/public/mnt/data/armanvarzesh/armanvarzesh/helm/armanfit-admin/values.yaml",
    "armanvarzesh v81/helm/infra/secretstore.example.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/Chart.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/values.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/deployment.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/pdb.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/ingress.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/external-secret.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/service.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/secret-env.yaml",
    "armanvarzesh v81/helm/armanfit-mobile/templates/networkpolicy.yaml",
    "armanvarzesh v81/helm/armanfit-admin/Chart.yaml",
    "armanvarzesh v81/helm/armanfit-admin/values.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/deployment.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/pdb.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/ingress.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/external-secret.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/service.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/secret-env.yaml",
    "armanvarzesh v81/helm/armanfit-admin/templates/networkpolicy.yaml",
    "armanvarzesh v81/helm/armanfit/Chart.yaml",
    "armanvarzesh v81/helm/armanfit/values.yaml",
    "armanvarzesh v81/helm/armanfit/templates/deployment.yaml",
    "armanvarzesh v81/helm/armanfit/templates/pdb.yaml",
    "armanvarzesh v81/helm/armanfit/templates/external-secret.yaml",
    "armanvarzesh v81/helm/armanfit/templates/hpa.yaml",
    "armanvarzesh v81/helm/armanfit/templates/secret-env.yaml",
    "armanvarzesh v81/helm/armanfit/templates/networkpolicy.yaml",
    "armanvarzesh v81/helm/armanfit-backend/Chart.yaml",
    "armanvarzesh v81/helm/armanfit-backend/values.production.yaml",
    "armanvarzesh v81/helm/armanfit-backend/values.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/deployment.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/pdb.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/ingress.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/external-secret.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/service.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/secret-env.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/externalsecret.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/secret.yaml",
    "armanvarzesh v81/helm/armanfit-backend/templates/networkpolicy.yaml",
    "armanvarzesh v81/helm/users-service/Chart.yaml",
    "armanvarzesh v81/helm/users-service/values.yaml",
    "armanvarzesh v81/helm/users-service/templates/deployment.yaml",
    "armanvarzesh v81/helm/users-service/templates/pdb.yaml",
    "armanvarzesh v81/helm/users-service/templates/external-secret.yaml",
    "armanvarzesh v81/helm/users-service/templates/service.yaml",
    "armanvarzesh v81/helm/users-service/templates/secret-env.yaml",
    "armanvarzesh v81/helm/users-service/templates/networkpolicy.yaml"
  ],
  "tests": [
    "armanvarzesh v81/app/coach-app/test/smoke.spec.ts",
    "armanvarzesh v81/app/coach-app/test/health.spec.ts",
    "armanvarzesh v81/app/coach-app/__tests__/client-list.spec.tsx",
    "armanvarzesh v81/app/coach-app/src/__tests__/sanity.test.ts",
    "armanvarzesh v81/app/admin/test/smoke.spec.ts",
    "armanvarzesh v81/app/admin/test/health.spec.ts",
    "armanvarzesh v81/app/backend/auth.service.spec.ts",
    "armanvarzesh v81/app/backend/payments.service.spec.ts",
    "armanvarzesh v81/app/backend/e2e.integration.spec.ts",
    "armanvarzesh v81/app/backend/test/smoke.spec.ts",
    "armanvarzesh v81/app/backend/test/circuit.breaker.spec.ts",
    "armanvarzesh v81/app/backend/test/admin.jwt.guard.spec.ts",
    "armanvarzesh v81/app/backend/test/idempotency.memory.spec.ts",
    "armanvarzesh v81/app/backend/test/roles.guard.spec.ts",
    "armanvarzesh v81/app/backend/test/admin.controller.spec.ts",
    "armanvarzesh v81/app/backend/test/contract.rest.spec.ts",
    "armanvarzesh v81/app/backend/test/notifications.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/contract.gql.spec.ts",
    "armanvarzesh v81/app/backend/test/notifications.processor.spec.ts",
    "armanvarzesh v81/app/backend/test/nutrition.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/health.spec.ts",
    "armanvarzesh v81/app/backend/test/payments/payments.service.spec.ts",
    "armanvarzesh v81/app/backend/test/unit/workouts.service.spec.ts",
    "armanvarzesh v81/app/backend/test/unit/users.service.spec.ts",
    "armanvarzesh v81/app/backend/test/unit/auth.service.spec.ts",
    "armanvarzesh v81/app/backend/test/unit/payment.service.spec.ts",
    "armanvarzesh v81/app/backend/test/unit/user.service.spec.ts",
    "armanvarzesh v81/app/backend/test/auth/auth.service.spec.ts",
    "armanvarzesh v81/app/backend/test/e2e/auth.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/e2e/reservations.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/e2e/payments.e2e.spec.ts",
    "armanvarzesh v81/app/backend/test/e2e/workouts.e2e.spec.ts",
    "armanvarzesh v81/app/backend/dist/payments/__tests__/payments.service.spec.js",
    "armanvarzesh v81/app/backend/dist/common/utils/__tests__/result.spec.js",
    "armanvarzesh v81/app/backend/dist/common/utils/__tests__/nulls.spec.js",
    "armanvarzesh v81/app/backend/dist/__tests__/smoke.spec.js",
    "armanvarzesh v81/app/backend/e2e/auth.e2e.spec.ts",
    "armanvarzesh v81/app/backend/e2e/health.e2e.spec.ts",
    "armanvarzesh v81/app/backend/e2e/reservations.e2e.spec.ts",
    "armanvarzesh v81/app/backend/e2e/diagnostics.e2e.test.ts",
    "armanvarzesh v81/app/backend/e2e/payments.e2e.spec.ts",
    "armanvarzesh v81/app/backend/e2e/payments.webhook.e2e.spec.ts",
    "armanvarzesh v81/app/backend/src/payments/__tests__/payments.service.spec.ts",
    "armanvarzesh v81/app/backend/src/common/utils/__tests__/result.spec.ts",
    "armanvarzesh v81/app/backend/src/common/utils/__tests__/nulls.spec.ts",
    "armanvarzesh v81/app/backend/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/app/backend/src/__tests__/sanity.test.ts",
    "armanvarzesh v81/app/media-worker/test/smoke.spec.ts",
    "armanvarzesh v81/app/media-worker/test/health.spec.ts",
    "armanvarzesh v81/app/live-subgraph/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/app/site/__e2e__/content.spec.ts",
    "armanvarzesh v81/app/site/__e2e__/home.spec.ts",
    "armanvarzesh v81/app/site/test/smoke.spec.ts",
    "armanvarzesh v81/app/site/test/health.spec.ts",
    "armanvarzesh v81/app/site/__tests__/ErrorBoundary.spec.tsx",
    "armanvarzesh v81/app/site/e2e/tests/a11y.spec.ts",
    "armanvarzesh v81/app/site/e2e/tests/vitrine.spec.ts",
    "armanvarzesh v81/app/site/e2e/tests/visual.spec.ts",
    "armanvarzesh v81/app/activity-subgraph/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/app/user-app/test/smoke.spec.ts",
    "armanvarzesh v81/app/user-app/test/health.spec.ts",
    "armanvarzesh v81/app/user-app/__tests__/PaymentScreen.spec.tsx",
    "armanvarzesh v81/app/user-app/__tests__/DebouncedButton.spec.tsx",
    "armanvarzesh v81/app/user-app/src/__tests__/sanity.test.ts",
    "armanvarzesh v81/app/social-subgraph/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/test/smoke.spec.ts",
    "armanvarzesh v81/test/contract.rest.spec.ts",
    "armanvarzesh v81/test/health.spec.ts",
    "armanvarzesh v81/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/contracts/tests/graphql_contract.test.ts",
    "armanvarzesh v81/contracts/tests/openapi_contract.test.ts",
    "armanvarzesh v81/user-pwa/src/__tests__/sanity.test.ts",
    "armanvarzesh v81/tests/admin-panel/unit/components/AdminSidebar.test.tsx",
    "armanvarzesh v81/tests/admin-panel/unit/components/DataTable.test.tsx",
    "armanvarzesh v81/tests/admin-panel/unit/pages/UserListPage.test.tsx",
    "armanvarzesh v81/tests/admin-panel/unit/pages/LoginPage.test.tsx",
    "armanvarzesh v81/tests/admin-panel/integration/dashboard-user-integration.spec.ts",
    "armanvarzesh v81/tests/staging/admin_rbac_forbidden.spec.ts",
    "armanvarzesh v81/tests/staging/coach_course_creation.spec.ts",
    "armanvarzesh v81/tests/staging/client_vip_payment.spec.ts",
    "armanvarzesh v81/tests/staging/client_booking.spec.ts",
    "armanvarzesh v81/tests/staging/chat_realtime.spec.ts",
    "armanvarzesh v81/tests/frontend/unit/components/Card.test.tsx",
    "armanvarzesh v81/tests/frontend/unit/components/NotificationItem.test.tsx",
    "armanvarzesh v81/tests/frontend/unit/components/Button.test.tsx",
    "armanvarzesh v81/tests/frontend/unit/components/Input.test.tsx",
    "armanvarzesh v81/tests/frontend/unit/pages/DashboardPage.test.tsx",
    "armanvarzesh v81/tests/frontend/unit/pages/LoginPage.test.tsx",
    "armanvarzesh v81/tests/frontend/integration/challenge-reward-integration.spec.ts",
    "armanvarzesh v81/tests/frontend/integration/dashboard-integration.spec.ts",
    "armanvarzesh v81/tests/backend/unit/coach.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/notification.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/auditlog.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/ai-workout.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/workout.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/hashing.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/auth.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/challenge.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/payment.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/user.service.spec.ts",
    "armanvarzesh v81/tests/backend/unit/nutrition.service.spec.ts",
    "armanvarzesh v81/tests/backend/integration/ai-nutrition.integration.spec.ts",
    "armanvarzesh v81/tests/backend/integration/coach-challenge.integration.spec.ts",
    "armanvarzesh v81/tests/backend/integration/user-workout.integration.spec.ts",
    "armanvarzesh v81/tests/mobile/coach-app/unit/screens/ClientListScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/coach-app/unit/screens/DashboardScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/coach-app/unit/screens/PlanBuilderScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/coach-app/unit/components/Card.test.tsx",
    "armanvarzesh v81/tests/mobile/coach-app/unit/components/Button.test.tsx",
    "armanvarzesh v81/tests/mobile/coach-app/integration/dashboard-client-integration.spec.ts",
    "armanvarzesh v81/tests/mobile/user-app/unit/screens/WorkoutListScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/user-app/unit/screens/ProfileScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/user-app/unit/screens/DashboardScreen.test.tsx",
    "armanvarzesh v81/tests/mobile/user-app/unit/components/Button.test.tsx",
    "armanvarzesh v81/tests/mobile/user-app/unit/components/Input.test.tsx",
    "armanvarzesh v81/tests/mobile/user-app/integration/dashboard-workout-integration.spec.ts",
    "armanvarzesh v81/tests/e2e/parity.spec.ts",
    "armanvarzesh v81/tests/e2e/routes.spec.ts",
    "armanvarzesh v81/tests/e2e/specialist.spec.ts",
    "armanvarzesh v81/packages/ui/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/infra/test/smoke.spec.ts",
    "armanvarzesh v81/packages/infra/test/health.spec.ts",
    "armanvarzesh v81/packages/awards-engine/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/web-core/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/env-config/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/auth/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/ui-components/test/smoke.spec.ts",
    "armanvarzesh v81/packages/ui-components/test/health.spec.ts",
    "armanvarzesh v81/packages/integration/test/smoke.test.ts",
    "armanvarzesh v81/packages/integration/test/health.spec.ts",
    "armanvarzesh v81/packages/contracts/test/smoke.spec.ts",
    "armanvarzesh v81/packages/contracts/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/utils/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/shared/test/smoke.spec.ts",
    "armanvarzesh v81/packages/shared/test/health.spec.ts",
    "armanvarzesh v81/packages/observability/test/smoke.spec.ts",
    "armanvarzesh v81/packages/observability/test/health.spec.ts",
    "armanvarzesh v81/packages/storage/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/contracts-tests/test/smoke.spec.ts",
    "armanvarzesh v81/packages/contracts-tests/tests/contracts-compat.spec.js",
    "armanvarzesh v81/packages/graphql-dataloader/test/smoke.spec.ts",
    "armanvarzesh v81/packages/graphql-dataloader/test/health.spec.ts",
    "armanvarzesh v81/packages/resilience/test/smoke.spec.ts",
    "armanvarzesh v81/packages/resilience/test/health.spec.ts",
    "armanvarzesh v81/packages/ui-kit-live/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/http-client/test/health.spec.ts",
    "armanvarzesh v81/packages/cache-std/test/smoke.spec.ts",
    "armanvarzesh v81/packages/cache-std/test/health.spec.ts",
    "armanvarzesh v81/packages/service-kit/test/smoke.test.ts",
    "armanvarzesh v81/packages/service-kit/test/health.spec.ts",
    "armanvarzesh v81/packages/client-live/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/auth-kit/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/packages/ui-tokens/test/smoke.spec.ts",
    "armanvarzesh v81/packages/ui-tokens/test/health.spec.ts",
    "armanvarzesh v81/packages/graphql-utils/test/smoke.spec.ts",
    "armanvarzesh v81/packages/graphql-utils/test/health.spec.ts",
    "armanvarzesh v81/packages/training-load-engine/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/coach-pwa/src/__tests__/sanity.test.ts",
    "armanvarzesh v81/e2e/smoke.spec.ts",
    "armanvarzesh v81/e2e/certificate.e2e.spec.ts",
    "armanvarzesh v81/e2e/tests/live-flow.spec.ts",
    "armanvarzesh v81/ui-tests/theme-toggle.spec.ts",
    "armanvarzesh v81/ui-tests/vitrin.spec.ts",
    "armanvarzesh v81/ui-tests/a11y-roles.spec.ts",
    "armanvarzesh v81/ui-tests/admin.spec.ts",
    "armanvarzesh v81/ui-tests/vitrin-ui-demo.spec.ts",
    "armanvarzesh v81/services/rewards-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/payments-service/test/smoke.test.ts",
    "armanvarzesh v81/services/payments-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/payments-service/test/basic.spec.ts",
    "armanvarzesh v81/services/payments-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/payments-service/test/payments.spec.ts",
    "armanvarzesh v81/services/payments-service/test/health.spec.ts",
    "armanvarzesh v81/services/payments-service/test/health.test.ts",
    "armanvarzesh v81/services/payments-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/predictive-service/test/smoke.test.ts",
    "armanvarzesh v81/services/predictive-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/predictive-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/predictive-service/test/health.spec.ts",
    "armanvarzesh v81/services/predictive-service/test/health.test.ts",
    "armanvarzesh v81/services/predictive-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/certificate-service/test/smoke.spec.ts",
    "armanvarzesh v81/services/certificate-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/certificate-service/test/contract.gql.spec.ts",
    "armanvarzesh v81/services/certificate-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/ai-service/test/smoke.test.ts",
    "armanvarzesh v81/services/ai-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/ai-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/ai-service/test/health.spec.ts",
    "armanvarzesh v81/services/ai-service/test/health.test.ts",
    "armanvarzesh v81/services/ai-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/analytics-collector/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/services/vip-service/test/smoke.test.ts",
    "armanvarzesh v81/services/vip-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/vip-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/vip-service/test/health.spec.ts",
    "armanvarzesh v81/services/vip-service/test/health.test.ts",
    "armanvarzesh v81/services/vip-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/api-gateway/src/__tests__/smoke.spec.ts",
    "armanvarzesh v81/services/physio-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/nutrition-service/test/smoke.test.ts",
    "armanvarzesh v81/services/nutrition-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/nutrition-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/nutrition-service/test/health.spec.ts",
    "armanvarzesh v81/services/nutrition-service/test/health.test.ts",
    "armanvarzesh v81/services/nutrition-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/assessments-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/reward-service/test/smoke.test.ts",
    "armanvarzesh v81/services/reward-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/reward-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/reward-service/test/health.spec.ts",
    "armanvarzesh v81/services/reward-service/test/health.test.ts",
    "armanvarzesh v81/services/reward-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/chat-service/test/chat.service.spec.ts",
    "armanvarzesh v81/services/chat-service/test/smoke.test.ts",
    "armanvarzesh v81/services/chat-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/chat-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/chat-service/test/health.spec.ts",
    "armanvarzesh v81/services/chat-service/test/health.test.ts",
    "armanvarzesh v81/services/chat-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/marketplace-service/test/smoke.test.ts",
    "armanvarzesh v81/services/marketplace-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/marketplace-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/marketplace-service/test/health.spec.ts",
    "armanvarzesh v81/services/marketplace-service/test/health.test.ts",
    "armanvarzesh v81/services/marketplace-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/media-worker/test/smoke.test.ts",
    "armanvarzesh v81/services/media-worker/test/health.spec.ts",
    "armanvarzesh v81/services/media-worker/test/health.test.ts",
    "armanvarzesh v81/services/assessment-service/test/smoke.test.ts",
    "armanvarzesh v81/services/assessment-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/assessment-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/assessment-service/test/health.spec.ts",
    "armanvarzesh v81/services/assessment-service/test/health.test.ts",
    "armanvarzesh v81/services/assessment-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/monitoring-service/test/smoke.test.ts",
    "armanvarzesh v81/services/monitoring-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/monitoring-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/monitoring-service/test/health.spec.ts",
    "armanvarzesh v81/services/monitoring-service/test/health.test.ts",
    "armanvarzesh v81/services/monitoring-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/analytics-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/coaches-service/test/smoke.test.ts",
    "armanvarzesh v81/services/coaches-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/coaches-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/coaches-service/test/health.spec.ts",
    "armanvarzesh v81/services/coaches-service/test/health.test.ts",
    "armanvarzesh v81/services/coaches-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/notifications.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/smoke.test.ts",
    "armanvarzesh v81/services/notifications-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/basic.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/health.spec.ts",
    "armanvarzesh v81/services/notifications-service/test/health.test.ts",
    "armanvarzesh v81/services/notifications-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/workouts.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/smoke.test.ts",
    "armanvarzesh v81/services/workouts-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/contract.gql.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/basic.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/health.spec.ts",
    "armanvarzesh v81/services/workouts-service/test/health.test.ts",
    "armanvarzesh v81/services/workouts-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/auth-service/test/auth.spec.ts",
    "armanvarzesh v81/services/auth-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/auth-service/test/health.spec.ts",
    "armanvarzesh v81/services/auth-service/test/health.test.ts",
    "armanvarzesh v81/services/auth-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/content-service/test/smoke.test.ts",
    "armanvarzesh v81/services/content-service/test/tiles-prisma.spec.ts",
    "armanvarzesh v81/services/content-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/content-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/content-service/test/health.spec.ts",
    "armanvarzesh v81/services/content-service/test/health.test.ts",
    "armanvarzesh v81/services/content-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/content-service/contract-tests/schema.contract.spec.ts",
    "armanvarzesh v81/services/booking-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/challenges-service/test/smoke.test.ts",
    "armanvarzesh v81/services/challenges-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/challenges-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/challenges-service/test/health.spec.ts",
    "armanvarzesh v81/services/challenges-service/test/health.test.ts",
    "armanvarzesh v81/services/challenges-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/courses-service/test/smoke.test.ts",
    "armanvarzesh v81/services/courses-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/courses-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/courses-service/test/health.spec.ts",
    "armanvarzesh v81/services/courses-service/test/health.test.ts",
    "armanvarzesh v81/services/courses-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/users-service/test/smoke.test.ts",
    "armanvarzesh v81/services/users-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/users-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/users-service/test/health.spec.ts",
    "armanvarzesh v81/services/users-service/test/health.test.ts",
    "armanvarzesh v81/services/users-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/affiliate-service/test/smoke.test.ts",
    "armanvarzesh v81/services/affiliate-service/test/contract.rest.spec.ts",
    "armanvarzesh v81/services/affiliate-service/test/ping.service.spec.ts",
    "armanvarzesh v81/services/affiliate-service/test/health.spec.ts",
    "armanvarzesh v81/services/affiliate-service/test/health.test.ts",
    "armanvarzesh v81/services/affiliate-service/test/e2e/core.e2e.spec.ts",
    "armanvarzesh v81/services/affiliate-service/e2e/db_redis.e2e.test.ts"
  ],
  "coverage_files": [
    "armanvarzesh v81/coverage/lcov.info"
  ],
  "duplicates": {
    "91112cfcb0bb5c5d8570ab7c1e7403c385d48526": [
      "armanvarzesh v81/LOCKFILE_NOTE.txt",
      "armanvarzesh v81/pnpm-lock.yaml.PLACEHOLDER"
    ],
    "360f26c4d00f34213202e43c901f1f1dbb38f076": [
      "armanvarzesh v81/tsconfig.build.json",
      "armanvarzesh v81/app/coach-app/tsconfig.build.json",
      "armanvarzesh v81/app/media-worker/tsconfig.build.json",
      "armanvarzesh v81/app/site/tsconfig.build.json",
      "armanvarzesh v81/app/user-app/tsconfig.build.json",
      "armanvarzesh v81/packages/infra/tsconfig.build.json",
      "armanvarzesh v81/packages/ui-components/tsconfig.build.json",
      "armanvarzesh v81/packages/contracts/tsconfig.build.json",
      "armanvarzesh v81/packages/shared/tsconfig.build.json",
      "armanvarzesh v81/packages/observability/tsconfig.build.json",
      "armanvarzesh v81/packages/graphql-dataloader/tsconfig.build.json",
      "armanvarzesh v81/packages/resilience/tsconfig.build.json",
      "armanvarzesh v81/packages/http-client/tsconfig.build.json",
      "armanvarzesh v81/packages/cache-std/tsconfig.build.json",
      "armanvarzesh v81/packages/ui-tokens/tsconfig.build.json",
      "armanvarzesh v81/packages/graphql-utils/tsconfig.build.json"
    ],
    "99d4a31d58601c40f8f8dd4e7e90052a11c52d38": [
      "armanvarzesh v81/app/coach-app/Dockerfile",
      "armanvarzesh v81/app/user-app/Dockerfile"
    ],
    "cb6e13f7ab348164d68fb788d82fafc7d555066a": [
      "armanvarzesh v81/app/coach-app/App.tsx",
      "armanvarzesh v81/app/user-app/App.tsx"
    ],
    "6fbc92b8c44777d2d5a864c1ca75e80b0665a34e": [
      "armanvarzesh v81/app/coach-app/codegen.yml",
      "armanvarzesh v81/app/coach-pwa/codegen.yml",
      "armanvarzesh v81/app/user-app/codegen.yml"
    ],
    "b8884ccddb4d937beaed9633f698786d8cd513db": [
      "armanvarzesh v81/app/coach-app/metro.config.js",
      "armanvarzesh v81/app/user-app/metro.config.js"
    ],
    "c7d2c03a2509afc8f331a507ce373a76249a060d": [
      "armanvarzesh v81/app/coach-app/tsconfig.json",
      "armanvarzesh v81/app/user-app/tsconfig.json"
    ],
    "0565b4404513e9e94c1049789c75a5dc4d82422b": [
      "armanvarzesh v81/app/coach-app/context/ThemeContext.tsx",
      "armanvarzesh v81/app/user-app/context/ThemeContext.tsx"
    ],
    "3b7ec2d433daa6ec4cdf926332119b453d924d39": [
      "armanvarzesh v81/app/coach-app/navigation/RootNavigator.tsx",
      "armanvarzesh v81/app/user-app/navigation/RootNavigator.tsx"
    ],
    "fb0d0ce5de5672ea98b20e248b5bbbdcecfc59f8": [
      "armanvarzesh v81/app/coach-app/utils/signed-upload.ts",
      "armanvarzesh v81/app/user-app/utils/signed-upload.ts"
    ],
    "d0b136e1376b095850d813a5d87c5d1ad314c059": [
      "armanvarzesh v81/app/coach-app/screens/ChatScreen.tsx",
      "armanvarzesh v81/app/user-app/screens/ChatScreen.tsx"
    ],
    "9b0bae733cbcbeb7d591b8a744f333371569e712": [
      "armanvarzesh v81/app/coach-app/screens/MarketplaceScreen.tsx",
      "armanvarzesh v81/app/user-app/screens/MarketplaceScreen.tsx"
    ],
    "8b0162d25e5a75454560a8cd62a937e03dd20b00": [
      "armanvarzesh v81/app/coach-app/screens/AdminContactScreen.tsx",
      "armanvarzesh v81/app/user-app/screens/AdminContactScreen.tsx"
    ],
    "cb7dd53b79f771d958aeb4505cf3c715cd3313ec": [
      "armanvarzesh v81/app/coach-app/components/lists/HighPerformanceFlatList.tsx",
      "armanvarzesh v81/app/user-app/components/lists/HighPerformanceFlatList.tsx"
    ],
    "42bd491c384f9872e2090b0d49f355cbd2b3a7a7": [
      "armanvarzesh v81/app/coach-app/components/Common/NotificationItem.tsx",
      "armanvarzesh v81/app/user-app/components/Common/NotificationItem.tsx"
    ],
    "319c5800347ff0141fce294cc3ee32c44aa92d0d": [
      "armanvarzesh v81/app/coach-app/components/Common/Input.tsx",
      "armanvarzesh v81/app/user-app/components/Common/Input.tsx"
    ],
    "1f7c4956926f5d85eb85d693fddff61038332426": [
      "armanvarzesh v81/app/coach-app/components/Common/Modal.tsx",
      "armanvarzesh v81/app/user-app/components/Common/Modal.tsx"
    ],
    "988a266cfb35f47a5c1cb09db49e970a5b651108": [
      "armanvarzesh v81/app/coach-app/components/Common/Loader.tsx",
      "armanvarzesh v81/app/user-app/components/Common/Loader.tsx"
    ],
    "145d55d1e1e41ddcaa02895acdea7a439a3a681e": [
      "armanvarzesh v81/app/coach-app/components/Common/Button.tsx",
      "armanvarzesh v81/app/user-app/components/Common/Button.tsx"
    ],
    "9a6ff45945367f621c1cbc0a1884828e6e8fd037": [
      "armanvarzesh v81/app/coach-app/components/Common/PaymentCard.tsx",
      "armanvarzesh v81/app/user-app/components/Common/PaymentCard.tsx"
    ],
    "81b7a9c12a8c729a32866f53efc11f86e5ed3b46": [
      "armanvarzesh v81/app/coach-app/components/common/SafePressable.tsx",
      "armanvarzesh v81/app/user-app/components/common/SafePressable.tsx"
    ],
    "6228b45762d0f28a2e304bae9137bb98f6b8e1ad": [
      "armanvarzesh v81/app/coach-app/graphql/mutations/chat.mutations.ts",
      "armanvarzesh v81/app/user-app/graphql/mutations/chat.mutations.ts"
    ],
    "b5c7bc2cabee24f0c87aea666a9eabdaaf5f339a": [
      "armanvarzesh v81/app/coach-app/hooks/useDebouncedCallback.ts",
      "armanvarzesh v81/app/user-app/hooks/useDebouncedCallback.ts"
    ],
    "a53f03c3dc828f8b0e16dfb76b268743d78d9681": [
      "armanvarzesh v81/app/coach-app/assets/fonts/Yekan.ttf",
      "armanvarzesh v81/app/admin/public/fonts/Yekan.ttf",
      "armanvarzesh v81/app/site/public/fonts/Yekan.ttf",
      "armanvarzesh v81/app/user-app/assets/fonts/Yekan.ttf"
    ],
    "edfd64c80345dce0b80a36afa54dfce45d7b5161": [
      "armanvarzesh v81/app/coach-app/src/main.ts",
      "armanvarzesh v81/app/media-worker/src/main.ts",
      "armanvarzesh v81/app/site/src/main.ts",
      "armanvarzesh v81/app/user-app/src/main.ts",
      "armanvarzesh v81/packages/infra/src/main.ts",
      "armanvarzesh v81/packages/integration/src/main.ts",
      "armanvarzesh v81/packages/observability/src/main.ts",
      "armanvarzesh v81/packages/graphql-dataloader/src/main.ts",
      "armanvarzesh v81/packages/resilience/src/main.ts",
      "armanvarzesh v81/packages/http-client/src/main.ts",
      "armanvarzesh v81/packages/cache-std/src/main.ts",
      "armanvarzesh v81/packages/graphql-utils/src/main.ts",
      "armanvarzesh v81/src/main.ts"
    ],
    "453bd3e55e9b5c14722079faa04c4ae88c6a723b": [
      "armanvarzesh v81/app/coach-app/src/features/NutritionScreen.tsx",
      "armanvarzesh v81/app/user-app/src/features/NutritionScreen.tsx"
    ],
    "07d92e234004e549e8087b092ab0483dec2c95b6": [
      "armanvarzesh v81/app/coach-app/src/features/assessments/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/assessments/Screen.tsx"
    ],
    "5c290b17659c7a32d925f7155fa8a264a39e533a": [
      "armanvarzesh v81/app/coach-app/src/features/payments/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/payments/Screen.tsx"
    ],
    "405f0c03dcf4e68e96a28e658fdc8117d828151e": [
      "armanvarzesh v81/app/coach-app/src/features/vip/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/vip/Screen.tsx"
    ],
    "3076d57ebf047e4c9b968765cd7e1289f0d01973": [
      "armanvarzesh v81/app/coach-app/src/features/certificate/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/certificate/Screen.tsx"
    ],
    "54ff2125298efd92bcfba3a9bb60cc098111f658": [
      "armanvarzesh v81/app/coach-app/src/features/chat/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/chat/Screen.tsx"
    ],
    "e0db1727dc807808fd747d95f59dc0771086582e": [
      "armanvarzesh v81/app/coach-app/src/features/booking/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/booking/Screen.tsx"
    ],
    "2732f743174fe405426b7634fdfb1c62ab7c4a6b": [
      "armanvarzesh v81/app/coach-app/src/features/workouts/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/workouts/Screen.tsx"
    ],
    "56c32d0ea48741ea86ffc7bb41b0a721af6d82f5": [
      "armanvarzesh v81/app/coach-app/src/features/marketplace/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/marketplace/Screen.tsx"
    ],
    "6f1090ec54b2325bd4b3214aed6a6e7b5efce9c6": [
      "armanvarzesh v81/app/coach-app/src/features/rewards/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/rewards/Screen.tsx"
    ],
    "215ba52950bdcb733fd1fc07ab1011a19aaf41d5": [
      "armanvarzesh v81/app/coach-app/src/features/courses/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/courses/Screen.tsx"
    ],
    "61228b8d89b4489a9c0610f3a4c55198675fa1a2": [
      "armanvarzesh v81/app/coach-app/src/features/ai/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/ai/Screen.tsx"
    ],
    "cd78972dec2377d1c077a852051519f83d25c81d": [
      "armanvarzesh v81/app/coach-app/src/features/affiliate/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/affiliate/Screen.tsx"
    ],
    "c2aacc752c9643fae153e3328e3227e31efc8526": [
      "armanvarzesh v81/app/coach-app/src/features/monitoring/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/monitoring/Screen.tsx"
    ],
    "4e1b43345f437bfb91e9344066587a693177f8ba": [
      "armanvarzesh v81/app/coach-app/src/features/nutrition/offline.ts",
      "armanvarzesh v81/app/user-app/src/features/nutrition/offline.ts"
    ],
    "adec5d2271adb7ac57a843eeac12f2605ebaf250": [
      "armanvarzesh v81/app/coach-app/src/features/notifications/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/notifications/Screen.tsx"
    ],
    "73c133cb31a914a39159fd7326edcb6be964ef3e": [
      "armanvarzesh v81/app/coach-app/src/features/analytics/Screen.tsx",
      "armanvarzesh v81/app/user-app/src/features/analytics/Screen.tsx"
    ],
    "61e51fa7aef08340c2a234c1428c2ed78a853d9a": [
      "armanvarzesh v81/app/coach-app/src/navigation/navigation.ts",
      "armanvarzesh v81/app/user-app/src/navigation/navigation.ts"
    ],
    "1826063164fe6a8b1bf544f60f7ffd32c3f9c1ad": [
      "armanvarzesh v81/app/coach-app/src/navigation/linking.ts",
      "armanvarzesh v81/app/user-app/src/navigation/linking.ts"
    ],
    "a982be52ae5fac684d09a92d1b9a392ae2875a5f": [
      "armanvarzesh v81/app/coach-app/src/navigation/RootNavigator.tsx",
      "armanvarzesh v81/app/user-app/src/navigation/RootNavigator.tsx"
    ],
    "1ba9652a354e6f5abd4206ba4ee275cf86981935": [
      "armanvarzesh v81/app/coach-app/src/components/ThemeToggle.tsx",
      "armanvarzesh v81/app/user-app/src/components/ThemeToggle.tsx"
    ],
    "e7047f4ec09b07cb5bce523a61e076b87137ebee": [
      "armanvarzesh v81/app/coach-app/src/components/common/SmartImage.tsx",
      "armanvarzesh v81/app/user-app/src/components/common/SmartImage.tsx"
    ],
    "e3ae7f128709708e2acccca057d7d144ec0c8bea": [
      "armanvarzesh v81/app/coach-app/src/api/client.ts",
      "armanvarzesh v81/app/coach-pwa/src/api/client.ts",
      "armanvarzesh v81/app/user-app/src/api/client.ts"
    ],
    "77025857ea8e6ad2d9573896cfaefc9f941c6528": [
      "armanvarzesh v81/app/coach-app/src/notifications/setup.ts",
      "armanvarzesh v81/app/user-app/src/notifications/setup.ts"
    ],
    "e09630c6a939c6d92ac5c7b1cb32ceb87888ab5c": [
      "armanvarzesh v81/app/coach-app/src/services/api.ts",
      "armanvarzesh v81/app/user-app/src/services/api.ts"
    ],
    "4c2d96824d86e277c071f616c6a3b866cef7bcf5": [
      "armanvarzesh v81/app/coach-app/src/services/auth.ts",
      "armanvarzesh v81/app/user-app/src/services/auth.ts"
    ],
    "9bf519aabef8d078d018f8cf6b5092fd4e2accfe": [
      "armanvarzesh v81/app/user-pwa/index.html",
      "armanvarzesh v81/app/coach-pwa/index.html"
    ],
    "7fd72b59905dbc4c424c77f544af7f16fd653f7a": [
      "armanvarzesh v81/app/user-pwa/tsconfig.build.json",
      "armanvarzesh v81/app/coach-pwa/tsconfig.build.json",
      "armanvarzesh v81/services/certificate-service/tsconfig.build.json",
      "armanvarzesh v81/services/api-gateway/tsconfig.build.json"
    ],
    "74e3060085d8daf5b72f78cb3d7c4cdca7db958c": [
      "armanvarzesh v81/app/user-pwa/tsconfig.json",
      "armanvarzesh v81/app/coach-pwa/tsconfig.json"
    ],
    "08ba19fd91d842e8409212d9c60e9f76046f71e2": [
      "armanvarzesh v81/app/user-pwa/public/sw.js",
      "armanvarzesh v81/app/admin/public/sw.js",
      "armanvarzesh v81/app/coach-pwa/public/sw.js"
    ],
    "a5efa14c09911cf5821dc3395f6577ab4715ced6": [
      "armanvarzesh v81/app/user-pwa/public/icons/icon-192.png",
      "armanvarzesh v81/app/admin/public/icons/icon-192.png",
      "armanvarzesh v81/app/coach-pwa/public/icons/icon-192.png"
    ],
    "1fcacc23dc28a9fd212e60efdca1adf6db44762e": [
      "armanvarzesh v81/app/user-pwa/public/icons/icon-512.png",
      "armanvarzesh v81/app/admin/public/icons/icon-512.png",
      "armanvarzesh v81/app/coach-pwa/public/icons/icon-512.png"
    ],
    "73a84791e0526a22e0df00f65ea6b518800d1d09": [
      "armanvarzesh v81/app/user-pwa/src/features/assessments/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/assessments/index.tsx"
    ],
    "3b0180d2eae6790d1748ac1a1bd0e396d3f527ca": [
      "armanvarzesh v81/app/user-pwa/src/features/payments/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/payments/index.tsx"
    ],
    "88ef3edc38cd86492ed3dd149cfb87b30908c3d4": [
      "armanvarzesh v81/app/user-pwa/src/features/vip/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/vip/index.tsx"
    ],
    "ea48d0cac40a5e7e8f8e80069a47b7d755318163": [
      "armanvarzesh v81/app/user-pwa/src/features/certificate/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/certificate/index.tsx"
    ],
    "795c191d24dc155487f10557edbf17457df236f4": [
      "armanvarzesh v81/app/user-pwa/src/features/booking/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/booking/index.tsx"
    ],
    "f02cdf22987f99e05b6d57ed399a0be0c3a6d36c": [
      "armanvarzesh v81/app/user-pwa/src/features/workouts/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/workouts/index.tsx"
    ],
    "904cd785e89d366b40279637b27bd933aec1b378": [
      "armanvarzesh v81/app/user-pwa/src/features/marketplace/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/marketplace/index.tsx"
    ],
    "b2ca1b2958cc2e4f5bc607277ce8a4875c9ad03c": [
      "armanvarzesh v81/app/user-pwa/src/features/rewards/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/rewards/index.tsx"
    ],
    "6868e5f48fc69baef9ccfb730ed2d7b268bcd69b": [
      "armanvarzesh v81/app/user-pwa/src/features/courses/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/courses/index.tsx"
    ],
    "48403fea5ffd69ce141615740c76945295ab138e": [
      "armanvarzesh v81/app/user-pwa/src/features/ai/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/ai/index.tsx"
    ],
    "aff7d0d608d5e4266c17fb91badc2f26784275b2": [
      "armanvarzesh v81/app/user-pwa/src/features/affiliate/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/affiliate/index.tsx"
    ],
    "c95766f4858722daf4cf440c46a49b88b8e100a4": [
      "armanvarzesh v81/app/user-pwa/src/features/monitoring/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/monitoring/index.tsx"
    ],
    "3c1faa44a15565e4d671f5c3e0b78b3679e39b4a": [
      "armanvarzesh v81/app/user-pwa/src/features/notifications/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/notifications/index.tsx"
    ],
    "6ad105c808d285f6bd1dfce79e887b6f88555dfb": [
      "armanvarzesh v81/app/user-pwa/src/features/analytics/index.tsx",
      "armanvarzesh v81/app/coach-pwa/src/features/analytics/index.tsx"
    ],
    "2759495dc29bb98a77281460de6eab988e4fe837": [
      "armanvarzesh v81/app/admin/tsconfig.build.json",
      "armanvarzesh v81/app/backend/tsconfig.build.json",
      "armanvarzesh v81/services/payments-service/tsconfig.build.json",
      "armanvarzesh v81/services/predictive-service/tsconfig.build.json",
      "armanvarzesh v81/services/ai-service/tsconfig.build.json",
      "armanvarzesh v81/services/vip-service/tsconfig.build.json",
      "armanvarzesh v81/services/nutrition-service/tsconfig.build.json",
      "armanvarzesh v81/services/reward-service/tsconfig.build.json",
      "armanvarzesh v81/services/chat-service/tsconfig.build.json",
      "armanvarzesh v81/services/marketplace-service/tsconfig.build.json",
      "armanvarzesh v81/services/media-worker/tsconfig.build.json",
      "armanvarzesh v81/services/assessment-service/tsconfig.build.json",
      "armanvarzesh v81/services/monitoring-service/tsconfig.build.json",
      "armanvarzesh v81/services/coaches-service/tsconfig.build.json",
      "armanvarzesh v81/services/notifications-service/tsconfig.build.json",
      "armanvarzesh v81/services/workouts-service/tsconfig.build.json",
      "armanvarzesh v81/services/auth-service/tsconfig.build.json",
      "armanvarzesh v81/services/content-service/tsconfig.build.json",
      "armanvarzesh v81/services/challenges-service/tsconfig.build.json",
      "armanvarzesh v81/services/courses-service/tsconfig.build.json",
      "armanvarzesh v81/services/users-service/tsconfig.build.json",
      "armanvarzesh v81/services/affiliate-service/tsconfig.build.json"
    ],
    "754f79378aad8abad6ff1031ca0c97b8a90282a3": [
      "armanvarzesh v81/app/backend/Dockerfile",
      "armanvarzesh v81/app/backend/scripts/Dockerfile"
    ],
    "da59ca15cc95ab2296a9340f3c4ac33dac25da9b": [
      "armanvarzesh v81/app/media-worker/tsconfig.json",
      "armanvarzesh v81/services/analytics-collector/tsconfig.json"
    ],
    "c895b61f579fd53b4821cce10db5fb118a8ae261": [
      "armanvarzesh v81/app/live-subgraph/tsconfig.build.json",
      "armanvarzesh v81/app/activity-subgraph/tsconfig.build.json",
      "armanvarzesh v81/app/social-subgraph/tsconfig.build.json",
      "armanvarzesh v81/packages/awards-engine/tsconfig.build.json",
      "armanvarzesh v81/packages/env-config/tsconfig.build.json",
      "armanvarzesh v81/packages/storage/tsconfig.build.json",
      "armanvarzesh v81/packages/ui-kit-live/tsconfig.build.json",
      "armanvarzesh v81/packages/client-live/tsconfig.build.json",
      "armanvarzesh v81/packages/auth-kit/tsconfig.build.json",
      "armanvarzesh v81/packages/training-load-engine/tsconfig.build.json",
      "armanvarzesh v81/services/analytics-collector/tsconfig.build.json"
    ],
    "c4fd5e3176dfbed9bc22964d7822b33025f75940": [
      "armanvarzesh v81/app/live-subgraph/tsconfig.json",
      "armanvarzesh v81/app/activity-subgraph/tsconfig.json",
      "armanvarzesh v81/app/social-subgraph/tsconfig.json"
    ],
    "04248fb888d3d624cea33b32378fb3c244f49ecd": [
      "armanvarzesh v81/app/activity-subgraph/prisma/migrations/PLAN_stage08/db_init.sh",
      "armanvarzesh v81/app/social-subgraph/prisma/migrations/PLAN_stage08/db_init.sh",
      "armanvarzesh v81/services/certificate-service/prisma/migrations/PLAN_stage08/db_init.sh"
    ],
    "3165747c200a13aacef24b6223d074ccaeeb9743": [
      "armanvarzesh v81/app/activity-subgraph/prisma/migrations/PLAN_stage08/README.md",
      "armanvarzesh v81/app/social-subgraph/prisma/migrations/PLAN_stage08/README.md",
      "armanvarzesh v81/services/certificate-service/prisma/migrations/PLAN_stage08/README.md"
    ],
    "15672bc8ab7a6b61d760ba2625e5530baeebb660": [
      "armanvarzesh v81/contracts/nutrition/tsconfig.json",
      "armanvarzesh v81/contracts/notifications/tsconfig.json"
    ],
    "c10d31315f5deffa0902ad90afce259b3ddc5638": [
      "armanvarzesh v81/user-pwa/public/sw.js",
      "armanvarzesh v81/coach-pwa/public/sw.js"
    ],
    "f7ba84717bab9f0219874775580c9a6fa579680d": [
      "armanvarzesh v81/user-pwa/src/features/nutrition/MealLog.tsx",
      "armanvarzesh v81/coach-pwa/src/features/nutrition/MealLog.tsx"
    ],
    "fc9008f3a6b082feb43da4634015685bd0fdfbaa": [
      "armanvarzesh v81/user-pwa/src/features/nutrition/MealPlan.tsx",
      "armanvarzesh v81/coach-pwa/src/features/nutrition/MealPlan.tsx"
    ],
    "c4e6ddf1ac400ac7808dcd31aec74ab6083a2ccf": [
      "armanvarzesh v81/user-pwa/src/lib/notifications.ts",
      "armanvarzesh v81/coach-pwa/src/lib/notifications.ts"
    ],
    "3a9c8af9a3dc9b592e2fd088bbda2e636473d756": [
      "armanvarzesh v81/user-pwa/src/lib/checkout.ts",
      "armanvarzesh v81/coach-pwa/src/lib/checkout.ts"
    ],
    "685e4a398dc3f3b844c19616c525e20281c3d628": [
      "armanvarzesh v81/user-pwa/src/lib/idb.ts",
      "armanvarzesh v81/coach-pwa/src/lib/idb.ts"
    ],
    "e42a452e0ce3e3e04e8bbb957d50ff60a08a0db0": [
      "armanvarzesh v81/tests/.github_35/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_32/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_34/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_20/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_28/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_21/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_26/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_19/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_38/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_36/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_25/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_22/workflows/test-coverage-report.yml"
    ],
    "fc7fe38b86363c094520aa2471f8d28b6adf6000": [
      "armanvarzesh v81/tests/.github_35/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_32/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_34/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_20/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_28/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_21/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_26/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_19/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_38/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_36/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_25/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_22/workflows/test-frontend.yml"
    ],
    "508d4d1559969ba8dc8150d7f48606e2f72698f2": [
      "armanvarzesh v81/tests/.github_35/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_32/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_34/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_20/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_28/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_21/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_26/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_19/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_38/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_36/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_25/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_22/workflows/test-mobile.yml"
    ],
    "72f9bfb3ee03056b521d311643fe72608712addc": [
      "armanvarzesh v81/tests/.github_35/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_32/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_34/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_20/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_28/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_21/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_26/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_19/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_38/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_36/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_25/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_22/workflows/test-backend.yml"
    ],
    "d602ba494dfd8653df16be4c55e8829da66b91c7": [
      "armanvarzesh v81/tests/.github_35/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_32/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_34/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_20/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_28/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_21/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_26/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_19/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_38/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_36/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_25/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_22/workflows/test-admin-panel.yml"
    ],
    "ebffe542cfe183a66086e571a3bec105d0997301": [
      "armanvarzesh v81/tests/.github_33/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_9/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_7/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_6/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_8/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_27/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_18/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_16/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_29/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_11/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_10/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_17/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_31/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_37/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_30/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_39/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_3/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_4/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_5/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_2/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_23/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_24/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_12/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_15/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_14/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_13/workflows/test-coverage-report.yml"
    ],
    "bebfd70a153a77456eccbecd00d074eaac46d286": [
      "armanvarzesh v81/tests/.github_33/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_9/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_7/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_6/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_8/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_27/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_18/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_16/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_29/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_11/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_10/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_17/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_31/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_37/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_30/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_39/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_3/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_4/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_5/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_2/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_23/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_24/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_12/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_15/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_14/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_13/workflows/test-frontend.yml"
    ],
    "783a5843cd0ddc0fe9a4e3b5e61dc775d328ca7e": [
      "armanvarzesh v81/tests/.github_33/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_9/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_7/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_6/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_8/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_27/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_18/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_16/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_29/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_11/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_10/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_17/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_31/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_37/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_30/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_39/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_3/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_4/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_5/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_2/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_23/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_24/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_12/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_15/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_14/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_13/workflows/test-mobile.yml"
    ],
    "4436c7447c42021b248c038da38d8b91e20728e8": [
      "armanvarzesh v81/tests/.github_33/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_9/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_7/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_6/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_8/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_27/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_18/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_16/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_29/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_11/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_10/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_17/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_31/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_37/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_30/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_39/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_3/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_4/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_5/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_2/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_23/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_24/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_12/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_15/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_14/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_13/workflows/test-backend.yml"
    ],
    "f65d8b269f3b00b7b84c45281b6420b28cae9d25": [
      "armanvarzesh v81/tests/.github_33/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_9/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_7/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_6/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_8/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_27/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_18/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_16/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_29/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_11/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_10/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_17/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_31/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_37/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_30/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_39/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_3/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_4/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_5/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_2/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_23/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_24/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_12/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_15/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_14/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_13/workflows/test-admin-panel.yml"
    ],
    "f55c48c857f716b5ecf07dbfffe49b7b65837a22": [
      "armanvarzesh v81/tests/admin-panel/jest.config.js",
      "armanvarzesh v81/tests/frontend/jest.config.js"
    ],
    "f6c1ae3bd14e2cd098c5a5f156984f457da8d53e": [
      "armanvarzesh v81/tests/.github_45/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_42/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_43/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_44/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/github/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_41/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_46/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_48/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_49/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_47/workflows/test-coverage-report.yml",
      "armanvarzesh v81/tests/.github_40/workflows/test-coverage-report.yml"
    ],
    "b67449d3cda17b8e251393983984b16164ce481a": [
      "armanvarzesh v81/tests/.github_45/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_42/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_43/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_44/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/github/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_41/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_46/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_48/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_49/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_47/workflows/test-frontend.yml",
      "armanvarzesh v81/tests/.github_40/workflows/test-frontend.yml"
    ],
    "9988025fafa759ea98c59be0c6e42aab56ffaa08": [
      "armanvarzesh v81/tests/.github_45/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_42/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_43/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_44/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/github/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_41/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_46/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_48/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_49/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_47/workflows/test-mobile.yml",
      "armanvarzesh v81/tests/.github_40/workflows/test-mobile.yml"
    ],
    "98f6cac478638f554bd35711d8c70256cebe8bf8": [
      "armanvarzesh v81/tests/.github_45/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_42/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_43/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_44/workflows/test-backend.yml",
      "armanvarzesh v81/tests/github/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_41/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_46/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_48/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_49/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_47/workflows/test-backend.yml",
      "armanvarzesh v81/tests/.github_40/workflows/test-backend.yml"
    ],
    "27b6158eb14e1f3a5e84931a31d8b18c58010b23": [
      "armanvarzesh v81/tests/.github_45/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_42/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_43/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_44/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/github/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_41/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_46/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_48/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_49/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_47/workflows/test-admin-panel.yml",
      "armanvarzesh v81/tests/.github_40/workflows/test-admin-panel.yml"
    ],
    "389f1a517ca90e8435101ca6a4faed68790e10ca": [
      "armanvarzesh v81/tests/mobile/coach-app/jest.config.js",
      "armanvarzesh v81/tests/mobile/user-app/jest.config.js"
    ],
    "bd9c2f5ac53ac51b0d9799491a8565f8cf637346": [
      "armanvarzesh v81/packages/ui/tsconfig.build.json",
      "armanvarzesh v81/packages/web-core/tsconfig.build.json",
      "armanvarzesh v81/packages/utils/tsconfig.build.json",
      "armanvarzesh v81/packages/state/tsconfig.build.json",
      "armanvarzesh v81/packages/libs/tsconfig.build.json",
      "armanvarzesh v81/packages/integrations/tsconfig.build.json",
      "armanvarzesh v81/packages/async-utils/tsconfig.build.json"
    ],
    "c4a1b3b8577da8450c69335373f768a0337a9f3d": [
      "armanvarzesh v81/packages/ui/tsconfig.json",
      "armanvarzesh v81/packages/web-core/tsconfig.json",
      "armanvarzesh v81/packages/utils/tsconfig.json",
      "armanvarzesh v81/packages/state/tsconfig.json",
      "armanvarzesh v81/packages/libs/tsconfig.json",
      "armanvarzesh v81/packages/integrations/tsconfig.json",
      "armanvarzesh v81/packages/async-utils/tsconfig.json"
    ],
    "cf8effb447f86690ed284cf4a5e5de0ff2fb03e3": [
      "armanvarzesh v81/packages/infra/tsconfig.json",
      "armanvarzesh v81/packages/integration/tsconfig.json",
      "armanvarzesh v81/packages/service-kit/tsconfig.json",
      "armanvarzesh v81/packages/graphql-utils/tsconfig.json"
    ],
    "9a610fe74d97aabc86e58f075d846428388cd25f": [
      "armanvarzesh v81/packages/ui-components/src/main.ts",
      "armanvarzesh v81/packages/shared/src/main.ts",
      "armanvarzesh v81/packages/service-kit/src/main.ts",
      "armanvarzesh v81/packages/ui-tokens/src/main.ts"
    ],
    "80bc7ef4bb7c7711841bc5e3742e6bbefa5fb7dd": [
      "armanvarzesh v81/packages/integration/tsconfig.build.json",
      "armanvarzesh v81/packages/service-kit/tsconfig.build.json"
    ],
    "7f6a1835bacd20230eff48230b4d66d19f902418": [
      "armanvarzesh v81/packages/observability/tsconfig.json",
      "armanvarzesh v81/packages/graphql-dataloader/tsconfig.json",
      "armanvarzesh v81/packages/resilience/tsconfig.json",
      "armanvarzesh v81/packages/cache-std/tsconfig.json"
    ],
    "714de913f77525ba1dd4b1aa1324e01f40c69da7": [
      "armanvarzesh v81/packages/observability-sdk/tsconfig.json",
      "armanvarzesh v81/packages/security-middleware/tsconfig.json"
    ],
    "b11eb03477f8e8c4177cb8cd757d8fe32d33f4b0": [
      "armanvarzesh v81/packages/contracts-tests/tsconfig.build.json",
      "armanvarzesh v81/packages/theme/tsconfig.build.json",
      "armanvarzesh v81/packages/graphql/tsconfig.build.json",
      "armanvarzesh v81/services/workers/tsconfig.build.json",
      "armanvarzesh v81/services/workers/bullmq-worker/tsconfig.build.json"
    ],
    "708710b9d3c7469308e5d67361784a120155f320": [
      "armanvarzesh v81/packages/contracts-tests/tsconfig.json",
      "armanvarzesh v81/packages/theme/tsconfig.json",
      "armanvarzesh v81/packages/graphql/tsconfig.json",
      "armanvarzesh v81/services/workers/tsconfig.json",
      "armanvarzesh v81/services/workers/bullmq-worker/tsconfig.json"
    ],
    "ddd7fec52f0f0f1f26e15a36924c8fd59cb9b70d": [
      "armanvarzesh v81/helm/armanfit-mobile/templates/external-secret.yaml",
      "armanvarzesh v81/helm/armanfit-admin/templates/external-secret.yaml",
      "armanvarzesh v81/helm/armanfit/templates/external-secret.yaml",
      "armanvarzesh v81/helm/armanfit-backend/templates/external-secret.yaml",
      "armanvarzesh v81/helm/users-service/templates/external-secret.yaml"
    ],
    "8a95133b18572082748d4645bd8e46682ccbba00": [
      "armanvarzesh v81/services/rewards-service/tsconfig.build.json",
      "armanvarzesh v81/services/physio-service/tsconfig.build.json",
      "armanvarzesh v81/services/assessments-service/tsconfig.build.json",
      "armanvarzesh v81/services/analytics-service/tsconfig.build.json",
      "armanvarzesh v81/services/booking-service/tsconfig.build.json"
    ],
    "cd7709255c942c8381088d52a72082534aeae7aa": [
      "armanvarzesh v81/services/rewards-service/tsconfig.json",
      "armanvarzesh v81/services/physio-service/tsconfig.json",
      "armanvarzesh v81/services/assessments-service/tsconfig.json",
      "armanvarzesh v81/services/analytics-service/tsconfig.json",
      "armanvarzesh v81/services/booking-service/tsconfig.json"
    ],
    "ae4a35f705a94e8aaa7abf7b8b1121518dcfcde8": [
      "armanvarzesh v81/services/rewards-service/src/health.controller.ts",
      "armanvarzesh v81/services/physio-service/src/health.controller.ts",
      "armanvarzesh v81/services/assessments-service/src/health.controller.ts",
      "armanvarzesh v81/services/analytics-service/src/health.controller.ts",
      "armanvarzesh v81/services/booking-service/src/health.controller.ts"
    ],
    "3810d1924b5602c84f07ca166d09d20935d11938": [
      "armanvarzesh v81/services/rewards-service/src/telemetry/telemetry.module.example.ts",
      "armanvarzesh v81/services/payments-service/src/telemetry/telemetry.module.example.ts"
    ],
    "771eb67d0d0c3dd9049bc7e498cbe489ebdd397a": [
      "armanvarzesh v81/services/rewards-service/src/telemetry/metrics.middleware.example.ts",
      "armanvarzesh v81/services/payments-service/src/telemetry/metrics.middleware.example.ts"
    ],
    "823d3e9d1bd38b6b3d2d7d2b334d45062b3caa98": [
      "armanvarzesh v81/services/payments-service/jest.config.js",
      "armanvarzesh v81/services/notifications-service/jest.config.js",
      "armanvarzesh v81/services/workouts-service/jest.config.js"
    ],
    "a7897c720fc620dc1ac63c1c591e337d7fcf6201": [
      "armanvarzesh v81/services/payments-service/tsconfig.json",
      "armanvarzesh v81/services/notifications-service/tsconfig.json",
      "armanvarzesh v81/services/workouts-service/tsconfig.json"
    ],
    "84ad92aec2894db906f431b15368b8b5cf62c30d": [
      "armanvarzesh v81/services/payments-service/jest.config.ts",
      "armanvarzesh v81/services/predictive-service/jest.config.ts",
      "armanvarzesh v81/services/ai-service/jest.config.ts",
      "armanvarzesh v81/services/vip-service/jest.config.ts",
      "armanvarzesh v81/services/nutrition-service/jest.config.ts",
      "armanvarzesh v81/services/reward-service/jest.config.ts",
      "armanvarzesh v81/services/chat-service/jest.config.ts",
      "armanvarzesh v81/services/marketplace-service/jest.config.ts",
      "armanvarzesh v81/services/assessment-service/jest.config.ts",
      "armanvarzesh v81/services/monitoring-service/jest.config.ts",
      "armanvarzesh v81/services/coaches-service/jest.config.ts",
      "armanvarzesh v81/services/notifications-service/jest.config.ts",
      "armanvarzesh v81/services/workouts-service/jest.config.ts",
      "armanvarzesh v81/services/auth-service/jest.config.ts",
      "armanvarzesh v81/services/content-service/jest.config.ts",
      "armanvarzesh v81/services/challenges-service/jest.config.ts",
      "armanvarzesh v81/services/courses-service/jest.config.ts",
      "armanvarzesh v81/services/users-service/jest.config.ts",
      "armanvarzesh v81/services/affiliate-service/jest.config.ts"
    ],
    "1dca950b138fe980a29dab15abc2135dd362956f": [
      "armanvarzesh v81/services/payments-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/predictive-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/ai-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/vip-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/nutrition-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/reward-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/chat-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/marketplace-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/assessment-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/monitoring-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/coaches-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/notifications-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/workouts-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/auth-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/content-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/challenges-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/courses-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/users-service/test/health.e2e-spec.ts",
      "armanvarzesh v81/services/affiliate-service/test/health.e2e-spec.ts"
    ],
    "d23a72db159f6bd8a02622f6aeb69da3bdf11f69": [
      "armanvarzesh v81/services/payments-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/predictive-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/ai-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/vip-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/nutrition-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/reward-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/chat-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/marketplace-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/assessment-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/monitoring-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/coaches-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/notifications-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/workouts-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/auth-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/content-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/challenges-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/courses-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/users-service/test/metrics.e2e-spec.ts",
      "armanvarzesh v81/services/affiliate-service/test/metrics.e2e-spec.ts"
    ],
    "22f94f6163858d1a65e48632ff4a9e36bfe368a3": [
      "armanvarzesh v81/services/payments-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/predictive-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/ai-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/vip-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/nutrition-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/reward-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/chat-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/marketplace-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/assessment-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/monitoring-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/coaches-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/notifications-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/workouts-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/auth-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/content-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/challenges-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/courses-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/users-service/test/ping.service.spec.ts",
      "armanvarzesh v81/services/affiliate-service/test/ping.service.spec.ts"
    ],
    "6fc079111c89bc5b921d96666f8279116c0b971c": [
      "armanvarzesh v81/services/payments-service/src/tracing.ts",
      "armanvarzesh v81/services/predictive-service/src/tracing.ts",
      "armanvarzesh v81/services/ai-service/src/tracing.ts",
      "armanvarzesh v81/services/vip-service/src/tracing.ts",
      "armanvarzesh v81/services/nutrition-service/src/tracing.ts",
      "armanvarzesh v81/services/reward-service/src/tracing.ts",
      "armanvarzesh v81/services/chat-service/src/tracing.ts",
      "armanvarzesh v81/services/marketplace-service/src/tracing.ts",
      "armanvarzesh v81/services/assessment-service/src/tracing.ts",
      "armanvarzesh v81/services/monitoring-service/src/tracing.ts",
      "armanvarzesh v81/services/coaches-service/src/tracing.ts",
      "armanvarzesh v81/services/notifications-service/src/tracing.ts",
      "armanvarzesh v81/services/workouts-service/src/tracing.ts",
      "armanvarzesh v81/services/auth-service/src/tracing.ts",
      "armanvarzesh v81/services/challenges-service/src/tracing.ts",
      "armanvarzesh v81/services/courses-service/src/tracing.ts",
      "armanvarzesh v81/services/users-service/src/tracing.ts",
      "armanvarzesh v81/services/affiliate-service/src/tracing.ts"
    ],
    "70ba8a6943abb0c1a640b9918065af2c1e6c53f5": [
      "armanvarzesh v81/services/payments-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/predictive-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/ai-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/vip-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/nutrition-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/reward-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/chat-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/marketplace-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/assessment-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/monitoring-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/coaches-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/notifications-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/workouts-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/auth-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/content-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/challenges-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/courses-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/users-service/src/metrics/metrics.module.ts",
      "armanvarzesh v81/services/affiliate-service/src/metrics/metrics.module.ts"
    ],
    "ffbdac4e0841bd16de6905f3535cd0938b3f713f": [
      "armanvarzesh v81/services/payments-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/predictive-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/ai-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/vip-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/nutrition-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/reward-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/chat-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/marketplace-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/assessment-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/monitoring-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/coaches-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/notifications-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/workouts-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/auth-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/content-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/challenges-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/courses-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/users-service/src/metrics/metrics.controller.ts",
      "armanvarzesh v81/services/affiliate-service/src/metrics/metrics.controller.ts"
    ],
    "d5525840deee95d2aca450b5ea34aaadea0e0c7c": [
      "armanvarzesh v81/services/payments-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/predictive-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/ai-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/vip-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/nutrition-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/reward-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/chat-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/marketplace-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/assessment-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/monitoring-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/coaches-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/notifications-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/workouts-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/auth-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/content-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/challenges-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/courses-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/users-service/src/metrics/metrics.middleware.ts",
      "armanvarzesh v81/services/affiliate-service/src/metrics/metrics.middleware.ts"
    ],
    "fc6d0df1efdba2f3e91feab5b5bd4386cad65bdb": [
      "armanvarzesh v81/services/payments-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/predictive-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/ai-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/vip-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/reward-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/chat-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/marketplace-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/assessment-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/monitoring-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/notifications-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/content-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/challenges-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/courses-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/affiliate-service/src/config/env.validation.ts"
    ],
    "bd19b72286886c0a399d2fcb4eeb27c7f77612fa": [
      "armanvarzesh v81/services/payments-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/predictive-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/ai-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/vip-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/nutrition-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/reward-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/chat-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/marketplace-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/assessment-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/monitoring-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/coaches-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/notifications-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/workouts-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/auth-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/challenges-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/courses-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/users-service/src/security/roles.guard.ts",
      "armanvarzesh v81/services/affiliate-service/src/security/roles.guard.ts"
    ],
    "3389cc73ac0406c814a80c385e9e762a0574d343": [
      "armanvarzesh v81/services/payments-service/src/health/health.module.ts",
      "armanvarzesh v81/services/notifications-service/src/health/health.module.ts",
      "armanvarzesh v81/services/workouts-service/src/health/health.module.ts"
    ],
    "8d5e66c52ad32caa10535603e58fd273b3063ad9": [
      "armanvarzesh v81/services/payments-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/predictive-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/ai-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/vip-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/nutrition-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/reward-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/chat-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/marketplace-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/assessment-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/monitoring-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/coaches-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/notifications-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/workouts-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/auth-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/content-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/challenges-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/courses-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/users-service/src/health/health.controller.ts",
      "armanvarzesh v81/services/affiliate-service/src/health/health.controller.ts"
    ],
    "2c7791e908bfc0739830f0490c76681884bc0c90": [
      "armanvarzesh v81/services/payments-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/predictive-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/ai-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/vip-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/nutrition-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/reward-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/chat-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/marketplace-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/assessment-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/monitoring-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/coaches-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/notifications-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/workouts-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/auth-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/content-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/challenges-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/courses-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/users-service/src/common/interceptors/logging.interceptor.ts",
      "armanvarzesh v81/services/affiliate-service/src/common/interceptors/logging.interceptor.ts"
    ],
    "5c1eeecea01bf62ab114dd8b8dc9efe52374b285": [
      "armanvarzesh v81/services/payments-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/predictive-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/ai-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/vip-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/nutrition-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/reward-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/chat-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/marketplace-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/assessment-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/monitoring-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/coaches-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/notifications-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/workouts-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/auth-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/content-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/challenges-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/courses-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/users-service/src/graphql/dataloader.ts",
      "armanvarzesh v81/services/affiliate-service/src/graphql/dataloader.ts"
    ],
    "f05abaa23a9337f7c1e0dc757226858d8cca8196": [
      "armanvarzesh v81/services/predictive-service/tsconfig.json",
      "armanvarzesh v81/services/ai-service/tsconfig.json",
      "armanvarzesh v81/services/chat-service/tsconfig.json",
      "armanvarzesh v81/services/challenges-service/tsconfig.json"
    ],
    "db0bd08dd593e4cad0e237bb7dba11bc2ffae43d": [
      "armanvarzesh v81/services/predictive-service/.env.example",
      "armanvarzesh v81/services/ai-service/.env.example",
      "armanvarzesh v81/services/vip-service/.env.example",
      "armanvarzesh v81/services/reward-service/.env.example",
      "armanvarzesh v81/services/marketplace-service/.env.example",
      "armanvarzesh v81/services/assessment-service/.env.example",
      "armanvarzesh v81/services/monitoring-service/.env.example",
      "armanvarzesh v81/services/challenges-service/.env.example",
      "armanvarzesh v81/services/courses-service/.env.example",
      "armanvarzesh v81/services/affiliate-service/.env.example"
    ],
    "ce68986893f90f576b93abdf9f2748ad37a443f8": [
      "armanvarzesh v81/services/predictive-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/ai-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/vip-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/nutrition-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/reward-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/chat-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/marketplace-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/assessment-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/monitoring-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/coaches-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/challenges-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/courses-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/users-service/test/contract.rest.spec.ts",
      "armanvarzesh v81/services/affiliate-service/test/contract.rest.spec.ts"
    ],
    "305b2d2dbb0300ff154df3510d6eb490bfc0bf60": [
      "armanvarzesh v81/services/predictive-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/ai-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/vip-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/nutrition-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/reward-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/chat-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/marketplace-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/assessment-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/monitoring-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/coaches-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/auth-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/content-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/challenges-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/courses-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/users-service/src/config/graphql.config.ts",
      "armanvarzesh v81/services/affiliate-service/src/config/graphql.config.ts"
    ],
    "09a092e86f9eb8f6acab7d28c14354bbd32036ed": [
      "armanvarzesh v81/services/predictive-service/src/health/health.module.ts",
      "armanvarzesh v81/services/ai-service/src/health/health.module.ts",
      "armanvarzesh v81/services/vip-service/src/health/health.module.ts",
      "armanvarzesh v81/services/nutrition-service/src/health/health.module.ts",
      "armanvarzesh v81/services/reward-service/src/health/health.module.ts",
      "armanvarzesh v81/services/chat-service/src/health/health.module.ts",
      "armanvarzesh v81/services/marketplace-service/src/health/health.module.ts",
      "armanvarzesh v81/services/assessment-service/src/health/health.module.ts",
      "armanvarzesh v81/services/monitoring-service/src/health/health.module.ts",
      "armanvarzesh v81/services/coaches-service/src/health/health.module.ts",
      "armanvarzesh v81/services/auth-service/src/health/health.module.ts",
      "armanvarzesh v81/services/content-service/src/health/health.module.ts",
      "armanvarzesh v81/services/challenges-service/src/health/health.module.ts",
      "armanvarzesh v81/services/courses-service/src/health/health.module.ts",
      "armanvarzesh v81/services/users-service/src/health/health.module.ts",
      "armanvarzesh v81/services/affiliate-service/src/health/health.module.ts"
    ],
    "e614684f00b89157d30cebc856039931d2779995": [
      "armanvarzesh v81/services/predictive-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/ai-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/vip-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/nutrition-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/reward-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/chat-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/marketplace-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/assessment-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/monitoring-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/coaches-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/auth-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/content-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/challenges-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/courses-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/users-service/src/dataloader/index.ts",
      "armanvarzesh v81/services/affiliate-service/src/dataloader/index.ts"
    ],
    "9e9f4a4f75525f19e9987c4d17add9d3e29b91eb": [
      "armanvarzesh v81/services/vip-service/tsconfig.json",
      "armanvarzesh v81/services/reward-service/tsconfig.json",
      "armanvarzesh v81/services/affiliate-service/tsconfig.json"
    ],
    "f8f606eef441b838df151daaf83bda183e9b66ff": [
      "armanvarzesh v81/services/nutrition-service/tsconfig.json",
      "armanvarzesh v81/services/coaches-service/tsconfig.json",
      "armanvarzesh v81/services/auth-service/tsconfig.json",
      "armanvarzesh v81/services/users-service/tsconfig.json"
    ],
    "67a9c1d7e6568754382a96fd289f307321e6fc35": [
      "armanvarzesh v81/services/nutrition-service/src/database/prisma-middleware.ts",
      "armanvarzesh v81/services/coaches-service/src/database/prisma-middleware.ts",
      "armanvarzesh v81/services/workouts-service/src/database/prisma-middleware.ts",
      "armanvarzesh v81/services/auth-service/src/database/prisma-middleware.ts",
      "armanvarzesh v81/services/users-service/src/database/prisma-middleware.ts"
    ],
    "1582e5c8fdb02715b3ca2303fb69ea923ef9b888": [
      "armanvarzesh v81/services/nutrition-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/coaches-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/workouts-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/auth-service/src/config/env.validation.ts",
      "armanvarzesh v81/services/users-service/src/config/env.validation.ts"
    ],
    "d39627ee6b013fe5837d376415f18bb215ada795": [
      "armanvarzesh v81/services/marketplace-service/tsconfig.json",
      "armanvarzesh v81/services/assessment-service/tsconfig.json",
      "armanvarzesh v81/services/content-service/tsconfig.json",
      "armanvarzesh v81/services/courses-service/tsconfig.json"
    ],
    "f8c30d97e26258a64aaf37309ca7e0b51ae49bc6": [
      "armanvarzesh v81/services/coaches-service/.env.example",
      "armanvarzesh v81/services/users-service/.env.example"
    ]
  },
  "dependency_graph": {
    "nodes": [
      "@app/coach",
      "@app/user",
      "@arman/armanfit-admin",
      "@arman/coach-app",
      "@arman/user-app",
      "@arman/vitrin-site",
      "@arman/activity-subgraph",
      "@arman/analytics-collector",
      "@arman/analytics-service",
      "@arman/assessments-service",
      "@arman/async-utils",
      "@arman/auth",
      "@arman/auth-kit",
      "@arman/awards-engine",
      "@arman/backend",
      "@arman/booking-service",
      "@arman/cache-std",
      "@arman/certificate-service",
      "@arman/client-live",
      "@arman/coach-pwa",
      "@arman/contracts",
      "@arman/contracts-tests",
      "@arman/env-config",
      "@arman/graphql",
      "@arman/graphql-dataloader",
      "@arman/graphql-utils",
      "@arman/http-client",
      "@arman/infra",
      "@arman/integration",
      "@arman/integrations",
      "@arman/integrations-livekit",
      "@arman/libs",
      "@arman/live-subgraph",
      "@arman/media-worker",
      "@arman/media-worker__media-worker",
      "@arman/observability",
      "@arman/observability-sdk",
      "@arman/physio-service",
      "@arman/resilience",
      "@arman/rewards-service",
      "@arman/sdk",
      "@arman/security-middleware",
      "@arman/service-kit",
      "@arman/shared",
      "@arman/social-subgraph",
      "@arman/state",
      "@arman/storage",
      "@arman/theme",
      "@arman/training-load-engine",
      "@arman/ui",
      "@arman/ui-components",
      "@arman/ui-kit-live",
      "@arman/ui-tokens",
      "@arman/user-pwa",
      "@arman/utils",
      "@arman/web-core",
      "@arman/workers",
      "@contracts/notifications",
      "@contracts/nutrition",
      "@mobile/coach",
      "@mobile/user",
      "affiliate-service",
      "ai-service",
      "api-gateway",
      "armanvarzesh-monorepo",
      "assessment-service",
      "auth-service",
      "bullmq-worker",
      "challenges-service",
      "chat-service",
      "coaches-service",
      "content-service",
      "courses-service",
      "marketplace-service",
      "monitoring-service",
      "notifications-service",
      "nutrition-service",
      "payments-service",
      "predictive-service",
      "reward-service",
      "users-service",
      "vip-service",
      "workouts-service"
    ],
    "edges": [
      [
        "@arman/armanfit-admin",
        "@arman/observability-sdk"
      ],
      [
        "@arman/armanfit-admin",
        "@arman/security-middleware"
      ],
      [
        "@arman/armanfit-admin",
        "@arman/ui-components"
      ],
      [
        "@arman/armanfit-admin",
        "@arman/ui-tokens"
      ],
      [
        "@arman/coach-app",
        "@arman/async-utils"
      ],
      [
        "@arman/coach-app",
        "@arman/http-client"
      ],
      [
        "@arman/coach-app",
        "@arman/state"
      ],
      [
        "@arman/coach-app",
        "@arman/ui"
      ],
      [
        "@arman/coach-app",
        "@arman/utils"
      ],
      [
        "@arman/user-app",
        "@arman/async-utils"
      ],
      [
        "@arman/user-app",
        "@arman/http-client"
      ],
      [
        "@arman/user-app",
        "@arman/state"
      ],
      [
        "@arman/user-app",
        "@arman/ui"
      ],
      [
        "@arman/user-app",
        "@arman/utils"
      ],
      [
        "@arman/vitrin-site",
        "@arman/async-utils"
      ],
      [
        "@arman/vitrin-site",
        "@arman/http-client"
      ],
      [
        "@arman/vitrin-site",
        "@arman/state"
      ],
      [
        "@arman/vitrin-site",
        "@arman/ui"
      ],
      [
        "@arman/vitrin-site",
        "@arman/ui-components"
      ],
      [
        "@arman/vitrin-site",
        "@arman/ui-tokens"
      ],
      [
        "@arman/vitrin-site",
        "@arman/utils"
      ],
      [
        "@arman/activity-subgraph",
        "@arman/awards-engine"
      ],
      [
        "@arman/activity-subgraph",
        "@arman/observability-sdk"
      ],
      [
        "@arman/activity-subgraph",
        "@arman/security-middleware"
      ],
      [
        "@arman/activity-subgraph",
        "@arman/training-load-engine"
      ],
      [
        "@arman/analytics-collector",
        "@arman/observability-sdk"
      ],
      [
        "@arman/analytics-collector",
        "@arman/security-middleware"
      ],
      [
        "@arman/analytics-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/analytics-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/assessments-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/assessments-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/backend",
        "@arman/env-config"
      ],
      [
        "@arman/backend",
        "@arman/observability"
      ],
      [
        "@arman/backend",
        "@arman/observability-sdk"
      ],
      [
        "@arman/backend",
        "@arman/security-middleware"
      ],
      [
        "@arman/booking-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/booking-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/certificate-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/certificate-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/contracts",
        "@arman/observability-sdk"
      ],
      [
        "@arman/contracts",
        "@arman/security-middleware"
      ],
      [
        "@arman/live-subgraph",
        "@arman/integrations-livekit"
      ],
      [
        "@arman/live-subgraph",
        "@arman/observability-sdk"
      ],
      [
        "@arman/live-subgraph",
        "@arman/security-middleware"
      ],
      [
        "@arman/live-subgraph",
        "@arman/storage"
      ],
      [
        "@arman/media-worker__media-worker",
        "@arman/integration"
      ],
      [
        "@arman/media-worker__media-worker",
        "@arman/service-kit"
      ],
      [
        "@arman/physio-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/physio-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/rewards-service",
        "@arman/observability-sdk"
      ],
      [
        "@arman/rewards-service",
        "@arman/security-middleware"
      ],
      [
        "@arman/sdk",
        "@contracts/notifications"
      ],
      [
        "@arman/sdk",
        "@contracts/nutrition"
      ],
      [
        "@arman/service-kit",
        "@arman/observability-sdk"
      ],
      [
        "@arman/service-kit",
        "@arman/security-middleware"
      ],
      [
        "@arman/shared",
        "@arman/observability-sdk"
      ],
      [
        "@arman/shared",
        "@arman/security-middleware"
      ],
      [
        "@arman/social-subgraph",
        "@arman/observability-sdk"
      ],
      [
        "@arman/social-subgraph",
        "@arman/security-middleware"
      ],
      [
        "@arman/ui-components",
        "@arman/observability-sdk"
      ],
      [
        "@arman/ui-components",
        "@arman/security-middleware"
      ],
      [
        "@arman/ui-tokens",
        "@arman/observability-sdk"
      ],
      [
        "@arman/ui-tokens",
        "@arman/security-middleware"
      ],
      [
        "affiliate-service",
        "@arman/integration"
      ],
      [
        "affiliate-service",
        "@arman/observability-sdk"
      ],
      [
        "affiliate-service",
        "@arman/security-middleware"
      ],
      [
        "affiliate-service",
        "@arman/service-kit"
      ],
      [
        "ai-service",
        "@arman/integration"
      ],
      [
        "ai-service",
        "@arman/observability-sdk"
      ],
      [
        "ai-service",
        "@arman/security-middleware"
      ],
      [
        "ai-service",
        "@arman/service-kit"
      ],
      [
        "assessment-service",
        "@arman/integration"
      ],
      [
        "assessment-service",
        "@arman/observability-sdk"
      ],
      [
        "assessment-service",
        "@arman/security-middleware"
      ],
      [
        "assessment-service",
        "@arman/service-kit"
      ],
      [
        "auth-service",
        "@arman/observability-sdk"
      ],
      [
        "auth-service",
        "@arman/security-middleware"
      ],
      [
        "challenges-service",
        "@arman/integration"
      ],
      [
        "challenges-service",
        "@arman/observability-sdk"
      ],
      [
        "challenges-service",
        "@arman/security-middleware"
      ],
      [
        "challenges-service",
        "@arman/service-kit"
      ],
      [
        "chat-service",
        "@arman/integration"
      ],
      [
        "chat-service",
        "@arman/observability-sdk"
      ],
      [
        "chat-service",
        "@arman/security-middleware"
      ],
      [
        "chat-service",
        "@arman/service-kit"
      ],
      [
        "coaches-service",
        "@arman/integration"
      ],
      [
        "coaches-service",
        "@arman/observability-sdk"
      ],
      [
        "coaches-service",
        "@arman/security-middleware"
      ],
      [
        "coaches-service",
        "@arman/service-kit"
      ],
      [
        "content-service",
        "@arman/integration"
      ],
      [
        "content-service",
        "@arman/observability-sdk"
      ],
      [
        "content-service",
        "@arman/security-middleware"
      ],
      [
        "content-service",
        "@arman/service-kit"
      ],
      [
        "courses-service",
        "@arman/integration"
      ],
      [
        "courses-service",
        "@arman/observability-sdk"
      ],
      [
        "courses-service",
        "@arman/security-middleware"
      ],
      [
        "courses-service",
        "@arman/service-kit"
      ],
      [
        "marketplace-service",
        "@arman/integration"
      ],
      [
        "marketplace-service",
        "@arman/observability-sdk"
      ],
      [
        "marketplace-service",
        "@arman/security-middleware"
      ],
      [
        "marketplace-service",
        "@arman/service-kit"
      ],
      [
        "monitoring-service",
        "@arman/integration"
      ],
      [
        "monitoring-service",
        "@arman/observability-sdk"
      ],
      [
        "monitoring-service",
        "@arman/security-middleware"
      ],
      [
        "monitoring-service",
        "@arman/service-kit"
      ],
      [
        "notifications-service",
        "@arman/integration"
      ],
      [
        "notifications-service",
        "@arman/observability-sdk"
      ],
      [
        "notifications-service",
        "@arman/security-middleware"
      ],
      [
        "notifications-service",
        "@arman/service-kit"
      ],
      [
        "nutrition-service",
        "@arman/integration"
      ],
      [
        "nutrition-service",
        "@arman/observability-sdk"
      ],
      [
        "nutrition-service",
        "@arman/security-middleware"
      ],
      [
        "nutrition-service",
        "@arman/service-kit"
      ],
      [
        "payments-service",
        "@arman/integration"
      ],
      [
        "payments-service",
        "@arman/observability-sdk"
      ],
      [
        "payments-service",
        "@arman/security-middleware"
      ],
      [
        "payments-service",
        "@arman/service-kit"
      ],
      [
        "predictive-service",
        "@arman/integration"
      ],
      [
        "predictive-service",
        "@arman/observability-sdk"
      ],
      [
        "predictive-service",
        "@arman/security-middleware"
      ],
      [
        "predictive-service",
        "@arman/service-kit"
      ],
      [
        "reward-service",
        "@arman/integration"
      ],
      [
        "reward-service",
        "@arman/observability-sdk"
      ],
      [
        "reward-service",
        "@arman/security-middleware"
      ],
      [
        "reward-service",
        "@arman/service-kit"
      ],
      [
        "users-service",
        "@arman/integration"
      ],
      [
        "users-service",
        "@arman/observability-sdk"
      ],
      [
        "users-service",
        "@arman/security-middleware"
      ],
      [
        "users-service",
        "@arman/service-kit"
      ],
      [
        "vip-service",
        "@arman/integration"
      ],
      [
        "vip-service",
        "@arman/observability-sdk"
      ],
      [
        "vip-service",
        "@arman/security-middleware"
      ],
      [
        "vip-service",
        "@arman/service-kit"
      ],
      [
        "workouts-service",
        "@arman/integration"
      ],
      [
        "workouts-service",
        "@arman/observability-sdk"
      ],
      [
        "workouts-service",
        "@arman/security-middleware"
      ],
      [
        "workouts-service",
        "@arman/service-kit"
      ]
    ]
  },
  "sbom": "artifacts/sbom.json",
  "sbom_count": 254,
  "patches": [
    "artifacts/patch/armanvarzesh v81_app_user_scripts.diff",
    "artifacts/patch/armanvarzesh v81_app_coach_scripts.diff",
    "artifacts/patch/armanvarzesh v81_app_live-subgraph_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_app_site_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_app_activity-subgraph_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_app_social-subgraph_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_contracts_nutrition_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_contracts_notifications_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_mobile_user_scripts.diff",
    "artifacts/patch/armanvarzesh v81_mobile_coach_scripts.diff",
    "artifacts/patch/armanvarzesh v81_sdk_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_awards-engine_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_auth_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_ui-components_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_contracts_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_shared_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_observability-sdk_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_storage_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_security-middleware_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_contracts-tests_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_integrations_livekit_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_theme_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_graphql_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_ui-kit-live_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_client-live_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_ui-tokens_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_packages_training-load-engine_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_rewards-service_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_certificate-service_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_physio-service_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_assessments-service_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_analytics-service_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_workers_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_workers_bullmq-worker_tsconfig_strict.diff",
    "artifacts/patch/armanvarzesh v81_services_booking-service_tsconfig_strict.diff",
    "artifacts/patch/repo_ci_workflow.diff"
  ],
  "pnpm_workspace": null,
  "tz": "Europe/Amsterdam",
  "ref_date": "2025-08-23",
  "actions_top10": [
    {
      "title": "Enable strict TypeScript across all tsconfig.json",
      "impact": "+3 score",
      "eta_hours": 4
    },
    {
      "title": "Create CI workflow with typecheck/lint/test/build",
      "impact": "+5 score",
      "eta_hours": 3
    },
    {
      "title": "Add JWT secret management via env + rotation",
      "impact": "Reduce auth breach risk",
      "eta_hours": 6
    },
    {
      "title": "Introduce rate limiting & security headers",
      "impact": "Mitigate abuse",
      "eta_hours": 3
    },
    {
      "title": "Add DB indexes on foreign keys in Prisma",
      "impact": "-120ms p95 on joins",
      "eta_hours": 2
    },
    {
      "title": "Implement centralized logging (pino) with correlationId",
      "impact": "Faster incident triage",
      "eta_hours": 4
    },
    {
      "title": "Add tests to core modules (Auth/Payments/Workout)",
      "impact": "+4 test score",
      "eta_hours": 12
    },
    {
      "title": "Add service worker & manifest to PWA apps",
      "impact": "+PWA score",
      "eta_hours": 4
    },
    {
      "title": "Add SBOM/SCA/Secret scan to CI",
      "impact": "Supply-chain risk down",
      "eta_hours": 2
    },
    {
      "title": "Provide ENV.example without secrets",
      "impact": "Safer onboarding",
      "eta_hours": 1
    }
  ],
  "monorepo_root": "armanvarzesh_v81/armanvarzesh v81"
}